<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to My Digital Playground! üéÆ on kiennt26's home</title><link>https://ntk148v.github.io/</link><description>Recent content in Welcome to My Digital Playground! üéÆ on kiennt26's home</description><generator>Hugo</generator><language>en-us</language><managingEditor>kiennt2609@gmail.com (Kien Nguyen-Tuan)</managingEditor><webMaster>kiennt2609@gmail.com (Kien Nguyen-Tuan)</webMaster><lastBuildDate>Mon, 16 Jun 2025 11:00:28 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Server-sent Events (SSE)</title><link>https://ntk148v.github.io/posts/sse-fastapi/</link><pubDate>Tue, 10 Jun 2025 13:34:12 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/sse-fastapi/</guid><description>&lt;h1 id="the-introverts-guide-to-real-time-web-updates-"&gt;The Introvert&amp;rsquo;s Guide to Real-time Web Updates üôà&lt;/h1&gt;
&lt;p&gt;Ever felt like WebSocket is that extroverted friend who&amp;rsquo;s always trying to start a conversation? &amp;ldquo;Hey server, how are you?&amp;rdquo; &amp;ldquo;I&amp;rsquo;m fine client, how are you?&amp;rdquo; &amp;ldquo;I&amp;rsquo;m good too!&amp;rdquo; üôÑ&lt;/p&gt;
&lt;p&gt;Well, meet Server-sent Events (SSE) - the introvert&amp;rsquo;s dream come true in the world of real-time web communications. It&amp;rsquo;s like having a friend who&amp;rsquo;s totally cool with you just listening while they do all the talking. Perfect, right?&lt;/p&gt;</description></item><item><title>A clumsy Docker network notes</title><link>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</link><pubDate>Tue, 12 Dec 2023 14:47:26 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</guid><description>&lt;h1 id="a-clumsy-docker-networking-notes"&gt;A clumsy Docker networking notes&lt;/h1&gt;
&lt;p&gt;Ngu·ªìn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ntk148v/til/tree/master/docker/networking"&gt;https://github.com/ntk148v/til/tree/master/docker/networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://argus-sec.com/docker-networking-behind-the-scenes/"&gt;https://argus-sec.com/docker-networking-behind-the-scenes/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/network/"&gt;https://docs.docker.com/network/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md"&gt;https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/tutorials/networkingcontainers/"&gt;https://docs.docker.com/engine/tutorials/networkingcontainers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/network/iptables/"&gt;https://docs.docker.com/network/iptables/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj"&gt;https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="kh√°i-ni·ªám"&gt;Kh√°i ni·ªám&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C√°c kh√°i ni·ªám:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://man7.org/linux/man-pages/man8/ip-netns.8.html"&gt;Network namespace&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tr∆∞·ªõc khi ƒëi v√†o network namespace, c·∫ßn hi·ªÉu v·ªÅ &lt;strong&gt;Namespace&lt;/strong&gt;. Namespace l√† m·ªôt t√≠nh nƒÉng c·ªßa Linux kernel ƒë·ªÉ ph√¢n v√πng t√†i nguy√™n c·ªßa kernel sao cho m·ªôt t·∫≠p h·ª£p c√°c process ch·ªâ nh√¨n th·∫•y t·∫≠p h·ª£p c√°c t√†i nguy√™n (trong namespace ƒë√≥) trong khi m·ªôt t·∫≠p h·ª£p c√°c process kh√°c nh√¨n th·∫•y t·∫≠p c√°c t√†i nguy√™n kh√°c (trong namespace kh√°c). T√≠nh nƒÉng n√†y ho·∫°t ƒë·ªông b·∫±ng c√°ch ƒë∆∞a t·∫≠p c√°c t√†i nguy√™n v√† process v√†o c√πng m·ªôt namespace, c√°c namespace kh√°c nhau s·∫Ω tham chi·∫øu ƒë·∫øn c√°c t√†i nguy√™n ri√™ng bi·ªát. T√†i nguy√™n c√≥ th·ªÉ t·ªìn t·∫°i trong nhi·ªÅu kh√¥ng gian. V√≠ d·ª• v·ªÅ c√°c t√†i nguy√™n nh∆∞ v·∫≠y l√† process ID, hostname, user ID, t√™n file v√† m·ªôt s·ªë t√™n (name) li√™n quan ƒë·∫øn quy·ªÅn truy c·∫≠p m·∫°ng v√† giao ti·∫øp gi·ªØa c√°c process.&lt;/li&gt;
&lt;li&gt;Networking namespace l√† m·ªôt trong c√°c lo·∫°i namespace. M·ªói network namespace c√≥ &lt;a href="https://en.wikipedia.org/wiki/Network_stack"&gt;network stack&lt;/a&gt; ri√™ng: ƒë·ªãa ch·ªâ IP, network interface, route table, &amp;hellip;&lt;/li&gt;
&lt;li&gt;B·∫°n c√≥ th·ªÉ xem thao t√°c c√°c network namespace b·∫±ng c√¢u l·ªánh sau:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ sudo ip netns &amp;lt;sub-command&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Network_bridge"&gt;Network bridge&lt;/a&gt;: m·ªôt thi·∫øt b·ªã m·∫°ng ·∫£o chuy·ªÉn ti·∫øp c√°c g√≥i gi·ªØa hai ho·∫∑c nhi·ªÅu ph√¢n ƒëo·∫°n m·∫°ng.&lt;/p&gt;</description></item><item><title>Writing a Simple Shell in C Sharp</title><link>https://ntk148v.github.io/posts/writing-a-simple-shell-in-c-sharp/</link><pubDate>Sun, 20 Aug 2023 23:15:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/writing-a-simple-shell-in-c-sharp/</guid><description>&lt;p&gt;In this post, we will write a minimalistic shell for UNIX(-like) operating systems in C# programming language. I create this for learning C# purpose.&lt;/p&gt;
&lt;p&gt;Since its purpose demonstration (not feature completeness or even fitness for causual use), it has many limitations, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commands must be on a single line.&lt;/li&gt;
&lt;li&gt;Arguments must be separated by whitespace.&lt;/li&gt;
&lt;li&gt;No quoting arguments or escaping whitespace.&lt;/li&gt;
&lt;li&gt;No piping or redirection.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Before we start, make sure you have .NET Core environment and knownledge.&lt;/p&gt;</description></item><item><title>Golang Async</title><link>https://ntk148v.github.io/posts/golang-async/</link><pubDate>Fri, 21 Jul 2023 16:16:31 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-async/</guid><description>&lt;blockquote&gt;
&lt;p&gt;This article is Golang version of &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/"&gt;Asynchronous programming with async and await guideline&lt;/a&gt;. They did really good job to demonstrate how asynchronous programming looks like.&lt;/p&gt;
&lt;p&gt;You can find source code &lt;a href="https://github.com/ntk148v/testing/tree/master/golang/breakfast"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Throughout this article, we&amp;rsquo;ll write the instructions to make a breakfast.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;1. Pour a cup of coffee.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;2. Heat a pan, then fry two eggs.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;3. Fry three slices of bacon.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;4. Toast two pieces of bread.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;5. Add butter and jam to the toast.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;6. Pour a glass of orange juice.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each step takes time to finish, for example, you have to wait X seconds to make a glass of orange juice. Let&amp;rsquo;s write those instructions as Golang:&lt;/p&gt;</description></item><item><title>Linux Run in the Background</title><link>https://ntk148v.github.io/posts/linux-run-in-the-background/</link><pubDate>Fri, 03 Mar 2023 14:28:09 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-run-in-the-background/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Environment:&lt;/strong&gt; Ubuntu 22.04, but it should work in other Linux distributions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;: &lt;a href="https://www.sobyte.net/post/2023-03/linux-services-in-the-background/"&gt;https://www.sobyte.net/post/2023-03/linux-services-in-the-background/&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You run some commands, it may take a long time to execute, and you don&amp;rsquo;t want to wait for it. So what should you do in that scenario?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;graph TD
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;A(You don&amp;#39;t want to wait &amp;lt;br&amp;gt;for a running command) --&amp;gt; B{Do you want to see output?}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;A --&amp;gt; C{Do you want the command to stay &amp;lt;br&amp;gt;running after the session ends?}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;C --&amp;gt; |Yes| E(screen)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;B --&amp;gt; |No| D(Ctrl-Z or &amp;amp;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;B --&amp;gt; |Yes| F{Do you have requirements &amp;lt;br&amp;gt;for log cutting, running users?}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;F --&amp;gt; |No| G(nohup)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;F --&amp;gt; |Yes| H(supervisor or systemd)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="ctrl-z-or-"&gt;Ctrl-Z or &amp;amp;&lt;/h2&gt;
&lt;p&gt;For example, you have to excute &lt;code&gt;ping&lt;/code&gt; command:&lt;/p&gt;</description></item><item><title>Linux Network Performance Ultimate Guide</title><link>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</link><pubDate>Fri, 24 Feb 2023 17:22:02 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</guid><description>&lt;blockquote&gt;
&lt;p&gt;The following content is from &lt;a href="https://github.com/ntk148v/til/blob/master/linux/network-performance-ultimate-guide.md"&gt;my #til github&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/leandromoreira/linux-network-performance-parameters/"&gt;https://github.com/leandromoreira/linux-network-performance-parameters/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf"&gt;https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coverfire.com/articles/queueing-in-the-linux-network-stack/"&gt;https://www.coverfire.com/articles/queueing-in-the-linux-network-stack/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/how-to-achieve-low-latency/"&gt;https://blog.cloudflare.com/how-to-achieve-low-latency/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/how-to-receive-a-million-packets/"&gt;https://blog.cloudflare.com/how-to-receive-a-million-packets/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beej.us/guide/bgnet/html/"&gt;https://beej.us/guide/bgnet/html/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/armlinuxww/article/details/111930788"&gt;https://blog.csdn.net/armlinuxww/article/details/111930788&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/docs/en/linux-on-systems?topic=recommendations-network-performance-tuning"&gt;https://www.ibm.com/docs/en/linux-on-systems?topic=recommendations-network-performance-tuning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="linux-networking-stack"&gt;Linux Networking stack&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.packagecloud.io/illustrated-guide-monitoring-tuning-linux-networking-stack-receiving-data/"&gt;https://blog.packagecloud.io/illustrated-guide-monitoring-tuning-linux-networking-stack-receiving-data/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-receiving-data/"&gt;https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-receiving-data/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-sending-data/"&gt;https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-sending-data/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.sobyte.net/post/2022-10/linux-net-snd-rcv/"&gt;https://www.sobyte.net/post/2022-10/linux-net-snd-rcv/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://juejin.cn/post/7106345054368694280"&gt;https://juejin.cn/post/7106345054368694280&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://openwrt.org/docs/guide-developer/networking/praxis"&gt;https://openwrt.org/docs/guide-developer/networking/praxis&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.51cto.com/u_15169172/2710604"&gt;https://blog.51cto.com/u_15169172/2710604&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://sn0rt.github.io/media/paper/TCPlinux.pdf"&gt;https://sn0rt.github.io/media/paper/TCPlinux.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/coccoc-engineering-blog/linux-network-ring-buffers-cea7ead0b8e8"&gt;https://medium.com/coccoc-engineering-blog/linux-network-ring-buffers-cea7ead0b8e8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The complete network data flow:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="http://web.archive.org/web/20170905131225if_/https://wiki.linuxfoundation.org/images/1/1c/Network_data_flow_through_kernel.png" alt=""&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a getting started. Before perform any tuning, let make sure that we understand how computers running Linux receive packets.&lt;/li&gt;
&lt;li&gt;Linux queue:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://github.com/leandromoreira/linux-network-performance-parameters/raw/master/img/linux_network_flow.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: The follow sections will heavily use &lt;code&gt;sysctl&lt;/code&gt;. If you don&amp;rsquo;t familiar with this command, take a look at &lt;a href="#204-sysctl"&gt;HOWTO#sysctl section&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Goat Playground</title><link>https://ntk148v.github.io/posts/goat-playground/</link><pubDate>Tue, 31 Jan 2023 14:15:12 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/goat-playground/</guid><description>&lt;p&gt;Hey, this is a simple post to play with &lt;a href="https://github.com/blampe/goat"&gt;GoAT Diagram&lt;/a&gt;.&lt;/p&gt;



&lt;div class="goat svg-container "&gt;
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 760 841"
 &gt;
 &lt;g transform='translate(8,16)'&gt;
&lt;path d='M 64,32 L 128,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 176,32 L 192,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,32 L 224,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,32 L 240,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,32 L 304,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,32 L 336,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,32 L 352,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,32 L 408,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,32 L 464,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,32 L 528,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,32 L 576,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,32 L 664,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 680,32 L 688,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 64,64 L 128,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 176,64 L 192,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,64 L 224,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,64 L 240,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,64 L 304,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,64 L 336,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,64 L 352,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,64 L 408,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 456,64 L 464,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,64 L 528,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,64 L 576,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,64 L 632,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 648,64 L 688,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,128 L 608,128' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,144 L 296,144' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,160 L 272,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,160 L 352,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,160 L 608,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 376,176 L 528,176' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,192 L 352,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,208 L 608,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,240 L 280,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,240 L 448,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 568,272 L 624,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 688,272 L 744,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 40,288 L 112,288' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,288 L 312,288' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,288 L 464,288' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 120,304 L 232,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,304 L 408,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,304 L 608,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,304 L 728,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 632,320 L 664,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 40,336 L 112,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,336 L 312,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 24,368 L 128,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,368 L 328,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,368 L 464,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,368 L 608,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,368 L 728,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,416 L 72,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 144,416 L 184,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,432 L 344,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,432 L 392,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,432 L 440,432' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 88,448 L 128,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 200,448 L 240,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,448 L 576,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 576,448 L 624,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,448 L 672,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,448 L 720,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,480 L 72,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 144,480 L 184,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,480 L 344,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,480 L 392,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,480 L 440,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,480 L 560,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,480 L 608,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,480 L 656,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 656,480 L 704,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 88,512 L 128,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 200,512 L 240,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,512 L 544,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 544,512 L 592,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 592,512 L 640,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,512 L 688,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,528 L 344,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,528 L 392,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,528 L 440,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 32,544 L 72,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 144,544 L 184,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,544 L 528,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,544 L 576,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 576,544 L 624,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,544 L 672,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 88,576 L 128,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 200,576 L 240,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,576 L 344,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,576 L 392,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,576 L 440,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,576 L 512,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,576 L 560,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,576 L 608,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,576 L 656,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,608 L 224,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,608 L 256,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,608 L 288,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,608 L 320,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,608 L 352,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,608 L 432,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,608 L 464,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,608 L 496,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,608 L 528,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,608 L 584,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,608 L 648,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,624 L 616,624' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,640 L 224,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,640 L 256,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,640 L 288,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,640 L 320,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,640 L 352,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,640 L 416,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,640 L 448,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,640 L 480,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,640 L 512,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,640 L 584,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,640 L 648,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,656 L 616,656' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,672 L 224,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,672 L 256,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,672 L 288,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,672 L 320,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,672 L 352,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,672 L 432,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,672 L 464,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,672 L 496,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,672 L 528,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,672 L 584,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,672 L 648,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,688 L 616,688' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,704 L 224,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,704 L 256,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,704 L 288,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,704 L 320,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,704 L 352,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,704 L 416,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,704 L 448,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,704 L 480,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,704 L 512,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,704 L 584,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,704 L 648,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 64,360 L 88,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 264,360 L 288,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 52,616 L 76,616' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 116,616 L 140,616' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 20,632 L 44,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 84,632 L 108,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 52,648 L 76,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 116,648 L 140,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 20,664 L 44,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 84,664 L 108,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 52,680 L 76,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 116,680 L 140,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 20,696 L 44,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 84,696 L 108,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 52,712 L 76,712' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 116,712 L 140,712' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 40,288 L 40,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,240 L 80,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 112,288 L 112,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,16 L 192,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,64 L 192,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,608 L 192,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,640 L 192,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,672 L 192,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,16 L 224,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,64 L 224,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,608 L 224,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,640 L 224,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,672 L 224,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,288 L 240,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,608 L 256,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,640 L 256,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,672 L 256,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 280,208 L 280,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,608 L 288,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,640 L 288,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,672 L 288,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,432 L 296,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,480 L 296,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 296,528 L 296,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,16 L 304,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,32 L 304,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,64 L 304,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 312,288 L 312,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,608 L 320,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,640 L 320,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,672 L 320,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,16 L 336,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,32 L 336,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,64 L 336,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,208 L 336,240' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,432 L 344,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,480 L 344,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 344,528 L 344,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 352,608 L 352,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 352,640 L 352,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 352,672 L 352,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,432 L 392,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,480 L 392,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 392,528 L 392,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,16 L 416,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,304 L 416,352' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 440,432 L 440,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 440,480 L 440,528' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 440,528 L 440,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,16 L 448,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,240 L 448,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,304 L 480,352' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,16 L 528,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,64 L 528,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 536,144 L 536,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,304 L 552,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,608 L 552,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,640 L 552,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,672 L 552,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,16 L 560,32' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,64 L 560,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,224 L 584,256' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,608 L 584,624' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,624 L 584,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,640 L 584,656' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,656 L 584,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,672 L 584,688' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 584,688 L 584,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,304 L 608,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,320 L 608,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,336 L 608,352' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,352 L 608,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,608 L 616,624' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,624 L 616,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,640 L 616,656' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,656 L 616,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,672 L 616,688' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 616,688 L 616,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,144 L 624,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,272 L 624,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,48 L 640,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 648,608 L 648,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 648,640 L 648,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 648,672 L 648,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,16 L 672,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,304 L 672,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,304 L 728,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,320 L 728,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,336 L 728,352' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,352 L 728,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 744,272 L 744,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 24,368 L 40,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 36,360 L 44,344' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,360 L 52,344' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 16,448 L 32,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 16,512 L 32,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 72,480 L 88,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 12,648 L 20,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 72,544 L 88,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 12,680 L 20,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,448 L 144,416' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,632 L 52,616' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,664 L 52,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,512 L 144,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,696 L 52,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,648 L 84,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,368 L 240,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,680 L 84,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,576 L 144,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 236,360 L 244,344' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,632 L 116,616' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 184,480 L 200,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 244,360 L 252,344' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,712 L 84,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,664 L 116,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,696 L 116,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 184,544 L 200,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,648 L 148,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,680 L 148,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,712 L 148,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,512 L 256,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,576 L 256,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,640 L 400,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,304 L 568,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,704 L 400,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,672 L 416,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,640 L 432,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,576 L 480,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,544 L 496,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,512 L 512,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,480 L 528,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,304 L 624,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,704 L 432,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,672 L 448,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,640 L 464,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,320 L 624,288' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,336 L 624,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,352 L 624,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,368 L 624,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,704 L 464,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,672 L 480,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,640 L 496,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,576 L 528,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,544 L 544,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 544,512 L 560,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,480 L 576,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,304 L 688,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,704 L 496,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,672 L 512,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,640 L 528,608' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,576 L 576,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 576,544 L 592,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 592,512 L 608,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,480 L 624,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,704 L 528,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,304 L 744,272' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,320 L 744,288' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,576 L 624,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,544 L 640,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,512 L 656,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 656,480 L 672,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,336 L 744,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,352 L 744,320' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 728,368 L 744,336' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 656,576 L 672,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,544 L 688,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 688,512 L 704,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 704,480 L 720,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 12,680 L 20,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 12,648 L 20,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,696 L 52,712' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,664 L 52,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 44,632 L 52,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,680 L 84,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,648 L 84,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 16,512 L 32,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,696 L 116,712' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 76,616 L 84,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,664 L 116,680' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 16,448 L 32,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,632 L 116,648' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 72,544 L 88,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,680 L 148,696' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,648 L 148,664' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 72,480 L 88,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 140,616 L 148,632' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 72,416 L 88,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,512 L 144,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,448 L 144,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 184,544 L 200,576' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 100,344 L 108,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 108,344 L 116,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 112,336 L 128,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 184,480 L 200,512' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 184,416 L 200,448' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,512 L 256,544' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,448 L 256,480' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,640 L 400,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,672 L 416,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,608 L 416,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,640 L 432,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,672 L 448,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 300,344 L 308,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,608 L 448,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,640 L 464,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,672 L 480,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 308,344 L 316,360' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 312,336 L 328,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,608 L 480,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,640 L 496,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,672 L 512,704' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,608 L 512,640' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,640 L 528,672' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,16 L 80,24' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,72 L 80,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 112,16 L 112,24' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 112,72 L 112,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,16 L 640,24' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,40 L 640,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,48 L 672,56' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,72 L 672,80' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,272 L 80,280' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='96.000000,272.000000 84.000000,266.399994 84.000000,277.600006' fill='currentColor' transform='rotate(90.000000, 80.000000, 272.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='128.000000,304.000000 116.000000,298.399994 116.000000,309.600006' fill='currentColor' transform='rotate(180.000000, 120.000000, 304.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='240.000000,304.000000 228.000000,298.399994 228.000000,309.600006' fill='currentColor' transform='rotate(0.000000, 232.000000, 304.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 280,200 L 280,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='296.000000,208.000000 284.000000,202.399994 284.000000,213.600006' fill='currentColor' transform='rotate(270.000000, 280.000000, 208.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='328.000000,304.000000 316.000000,298.399994 316.000000,309.600006' fill='currentColor' transform='rotate(180.000000, 320.000000, 304.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 336,200 L 336,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='352.000000,208.000000 340.000000,202.399994 340.000000,213.600006' fill='currentColor' transform='rotate(270.000000, 336.000000, 208.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='384.000000,176.000000 372.000000,170.399994 372.000000,181.600006' fill='currentColor' transform='rotate(180.000000, 376.000000, 176.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='416.000000,304.000000 404.000000,298.399994 404.000000,309.600006' fill='currentColor' transform='rotate(0.000000, 408.000000, 304.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 448,272 L 448,280' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='464.000000,272.000000 452.000000,266.399994 452.000000,277.600006' fill='currentColor' transform='rotate(90.000000, 448.000000, 272.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='536.000000,176.000000 524.000000,170.399994 524.000000,181.600006' fill='currentColor' transform='rotate(0.000000, 528.000000, 176.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 584,216 L 584,224' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='600.000000,224.000000 588.000000,218.399994 588.000000,229.600006' fill='currentColor' transform='rotate(270.000000, 584.000000, 224.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 584,256 L 584,264' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;polygon points='600.000000,256.000000 588.000000,250.399994 588.000000,261.600006' fill='currentColor' transform='rotate(90.000000, 584.000000, 256.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='640.000000,320.000000 628.000000,314.399994 628.000000,325.600006' fill='currentColor' transform='rotate(180.000000, 632.000000, 320.000000)'&gt;&lt;/polygon&gt;
&lt;polygon points='672.000000,320.000000 660.000000,314.399994 660.000000,325.600006' fill='currentColor' transform='rotate(0.000000, 664.000000, 320.000000)'&gt;&lt;/polygon&gt;
&lt;path d='M 96,0 A 16,16 0 0,0 80,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 96,0 A 16,16 0 0,1 112,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 208,0 A 16,16 0 0,0 192,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 208,0 A 16,16 0 0,1 224,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,0 A 16,16 0 0,0 304,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 320,0 A 16,16 0 0,1 336,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,0 A 16,16 0 0,0 416,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,0 A 16,16 0 0,1 448,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 544,0 A 16,16 0 0,0 528,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 544,0 A 16,16 0 0,1 560,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 656,0 A 16,16 0 0,0 640,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 656,0 A 16,16 0 0,1 672,16' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 64,32 A 16,16 0 0,0 48,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 128,32 A 16,16 0 0,1 144,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 176,32 A 16,16 0 0,0 160,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,32 A 16,16 0 0,1 256,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,32 A 16,16 0 0,0 272,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 352,32 A 16,16 0 0,1 368,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 400,32 A 16,16 0 0,0 384,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,32 A 16,16 0 0,1 480,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 512,32 A 16,16 0 0,0 496,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 576,32 A 16,16 0 0,1 592,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,32 A 16,16 0 0,0 608,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 688,32 A 16,16 0 0,1 704,48' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 48,48 A 16,16 0 0,0 64,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 144,48 A 16,16 0 0,1 128,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 160,48 A 16,16 0 0,0 176,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,48 A 16,16 0 0,1 240,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 272,48 A 16,16 0 0,0 288,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 368,48 A 16,16 0 0,1 352,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 384,48 A 16,16 0 0,0 400,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,48 A 16,16 0 0,1 464,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 496,48 A 16,16 0 0,0 512,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 592,48 A 16,16 0 0,1 576,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,48 A 16,16 0 0,0 624,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 704,48 A 16,16 0 0,1 688,64' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 80,80 A 16,16 0 0,0 96,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 112,80 A 16,16 0 0,1 96,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 192,80 A 16,16 0 0,0 208,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 224,80 A 16,16 0 0,1 208,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 304,80 A 16,16 0 0,0 320,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 336,80 A 16,16 0 0,1 320,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,80 A 16,16 0 0,0 432,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 448,80 A 16,16 0 0,1 432,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 528,80 A 16,16 0 0,0 544,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 560,80 A 16,16 0 0,1 544,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 640,80 A 16,16 0 0,0 656,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 672,80 A 16,16 0 0,1 656,96' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 312,128 A 16,16 0 0,0 296,144' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 312,128 A 16,16 0 0,1 328,144' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 552,128 A 16,16 0 0,0 536,144' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 608,128 A 16,16 0 0,1 624,144' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 288,144 A 16,16 0 0,0 272,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 256,160 A 16,16 0 0,0 240,176' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 328,144 A 16,16 0 0,0 344,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 352,160 A 16,16 0 0,1 368,176' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 536,144 A 16,16 0 0,0 552,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,144 A 16,16 0 0,1 608,160' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 240,176 A 16,16 0 0,0 256,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 368,176 A 16,16 0 0,1 352,192' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 536,192 A 16,16 0 0,0 552,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 624,192 A 16,16 0 0,1 608,208' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 432,288 A 16,16 0 0,0 416,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 464,288 A 16,16 0 0,1 480,304' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 416,352 A 16,16 0 0,0 432,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;path d='M 480,352 A 16,16 0 0,1 464,368' fill='none' stroke='currentColor'&gt;&lt;/path&gt;
&lt;circle cx='16' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='16' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='16' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='16' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='16' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='32' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='32' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='32' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='32' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='32' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='48' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='48' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='48' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='48' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='48' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='64' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='64' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='64' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='64' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='64' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='80' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='80' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='80' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='80' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='80' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='104' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='104' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='104' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='104' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='104' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='120' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='120' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='120' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='120' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='120' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='136' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='136' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='136' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='136' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='136' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='152' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='152' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='152' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='152' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='152' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='168' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='168' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='168' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='168' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='168' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='192' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='192' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='192' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='192' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='192' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='208' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='208' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='208' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='208' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='208' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='224' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='224' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='224' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='224' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='224' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='240' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='240' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='240' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='240' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='240' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='256' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='256' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='256' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='256' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='256' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='280' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='288' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='288' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='296' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='296' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='296' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='304' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='304' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='312' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='312' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='312' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='320' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='320' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='328' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='328' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='328' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='336' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='336' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='344' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='368' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='376' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='376' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='384' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='384' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='384' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='392' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='392' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='400' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='400' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='400' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='408' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='408' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='416' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='416' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='416' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='424' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='424' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='432' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='448' cy='352' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='456' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='464' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='464' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='472' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='472' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='472' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='480' cy='768' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='480' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='488' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='488' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='488' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='496' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='496' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='504' cy='752' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='504' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='504' cy='816' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='512' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='512' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='520' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='568' cy='752' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='568' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='568' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='584' cy='768' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='616' cy='784' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='616' cy='800' r='6' stroke='currentColor' fill='#fff'&gt;&lt;/circle&gt;
&lt;circle cx='680' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='688' cy='800' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='696' cy='784' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;circle cx='696' cy='816' r='6' stroke='currentColor' fill='currentColor'&gt;&lt;/circle&gt;
&lt;text text-anchor='middle' x='32' y='676' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='48' y='324' fill='currentColor' style='font-size:1em'&gt;W&lt;/text&gt;
&lt;text text-anchor='middle' x='48' y='388' fill='currentColor' style='font-size:1em'&gt;L&lt;/text&gt;
&lt;text text-anchor='middle' x='48' y='516' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='56' y='324' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='56' y='388' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='64' y='324' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='64' y='388' fill='currentColor' style='font-size:1em'&gt;p&lt;/text&gt;
&lt;text text-anchor='middle' x='64' y='660' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='72' y='324' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='72' y='388' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='80' y='324' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='80' y='388' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='88' y='324' fill='currentColor' style='font-size:1em'&gt;w&lt;/text&gt;
&lt;text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'&gt;p&lt;/text&gt;
&lt;text text-anchor='middle' x='96' y='324' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='104' y='388' fill='currentColor' style='font-size:1em'&gt;1&lt;/text&gt;
&lt;text text-anchor='middle' x='104' y='484' fill='currentColor' style='font-size:1em'&gt;B&lt;/text&gt;
&lt;text text-anchor='middle' x='160' y='228' fill='currentColor' style='font-size:1em'&gt;I&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='228' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'&gt;W&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'&gt;F&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='228' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='200' y='228' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='208' y='228' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='216' y='228' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='240' y='692' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='248' y='388' fill='currentColor' style='font-size:1em'&gt;L&lt;/text&gt;
&lt;text text-anchor='middle' x='256' y='388' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='324' fill='currentColor' style='font-size:1em'&gt;O&lt;/text&gt;
&lt;text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'&gt;p&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='324' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='388' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='272' y='660' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='280' y='388' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'&gt;v&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='324' fill='currentColor' style='font-size:1em'&gt;X&lt;/text&gt;
&lt;text text-anchor='middle' x='288' y='388' fill='currentColor' style='font-size:1em'&gt;p&lt;/text&gt;
&lt;text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='304' y='388' fill='currentColor' style='font-size:1em'&gt;2&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'&gt;C&lt;/text&gt;
&lt;text text-anchor='middle' x='320' y='564' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'&gt;B&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='368' y='516' fill='currentColor' style='font-size:1em'&gt;B&lt;/text&gt;
&lt;text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'&gt;o&lt;/text&gt;
&lt;text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'&gt;h&lt;/text&gt;
&lt;text text-anchor='middle' x='424' y='388' fill='currentColor' style='font-size:1em'&gt;T&lt;/text&gt;
&lt;text text-anchor='middle' x='432' y='388' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='432' y='660' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='440' y='324' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='440' y='388' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='448' y='324' fill='currentColor' style='font-size:1em'&gt;O&lt;/text&gt;
&lt;text text-anchor='middle' x='448' y='388' fill='currentColor' style='font-size:1em'&gt;l&lt;/text&gt;
&lt;text text-anchor='middle' x='456' y='324' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='456' y='388' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='464' y='388' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='464' y='660' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='480' y='388' fill='currentColor' style='font-size:1em'&gt;1&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='552' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'&gt;U&lt;/text&gt;
&lt;text text-anchor='middle' x='560' y='388' fill='currentColor' style='font-size:1em'&gt;D&lt;/text&gt;
&lt;text text-anchor='middle' x='560' y='532' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='388' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='692' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='568' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'&gt;#&lt;/text&gt;
&lt;text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='576' y='388' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='388' fill='currentColor' style='font-size:1em'&gt;i&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='584' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='592' y='180' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='592' y='388' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='180' fill='currentColor' style='font-size:1em'&gt;s&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'&gt;#&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='388' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='676' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='600' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='608' y='388' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='608' y='532' fill='currentColor' style='font-size:1em'&gt;B&lt;/text&gt;
&lt;text text-anchor='middle' x='616' y='388' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='616' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='616' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='616' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='624' y='388' fill='currentColor' style='font-size:1em'&gt;d&lt;/text&gt;
&lt;text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'&gt;L&lt;/text&gt;
&lt;text text-anchor='middle' x='640' y='388' fill='currentColor' style='font-size:1em'&gt;S&lt;/text&gt;
&lt;text text-anchor='middle' x='648' y='308' fill='currentColor' style='font-size:1em'&gt;A&lt;/text&gt;
&lt;text text-anchor='middle' x='648' y='388' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='648' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='656' y='308' fill='currentColor' style='font-size:1em'&gt;N&lt;/text&gt;
&lt;text text-anchor='middle' x='656' y='388' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='656' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='656' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='664' y='388' fill='currentColor' style='font-size:1em'&gt;v&lt;/text&gt;
&lt;text text-anchor='middle' x='664' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='664' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='664' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='672' y='388' fill='currentColor' style='font-size:1em'&gt;e&lt;/text&gt;
&lt;text text-anchor='middle' x='672' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='672' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'&gt;U&lt;/text&gt;
&lt;text text-anchor='middle' x='680' y='388' fill='currentColor' style='font-size:1em'&gt;r&lt;/text&gt;
&lt;text text-anchor='middle' x='680' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='680' y='820' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'&gt;b&lt;/text&gt;
&lt;text text-anchor='middle' x='688' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='696' y='292' fill='currentColor' style='font-size:1em'&gt;#&lt;/text&gt;
&lt;text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='696' y='388' fill='currentColor' style='font-size:1em'&gt;R&lt;/text&gt;
&lt;text text-anchor='middle' x='696' y='756' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'&gt;n&lt;/text&gt;
&lt;text text-anchor='middle' x='704' y='388' fill='currentColor' style='font-size:1em'&gt;a&lt;/text&gt;
&lt;text text-anchor='middle' x='704' y='772' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='704' y='804' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'&gt;t&lt;/text&gt;
&lt;text text-anchor='middle' x='712' y='388' fill='currentColor' style='font-size:1em'&gt;c&lt;/text&gt;
&lt;text text-anchor='middle' x='712' y='788' fill='currentColor' style='font-size:1em'&gt;¬∑&lt;/text&gt;
&lt;text text-anchor='middle' x='720' y='292' fill='currentColor' style='font-size:1em'&gt;#&lt;/text&gt;
&lt;text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'&gt;u&lt;/text&gt;
&lt;text text-anchor='middle' x='720' y='388' fill='currentColor' style='font-size:1em'&gt;k&lt;/text&gt;
&lt;/g&gt;

 &lt;/svg&gt;
 
&lt;/div&gt;</description></item><item><title>Problem Solving Techniques</title><link>https://ntk148v.github.io/posts/problem-solving-techniques/</link><pubDate>Wed, 18 Jan 2023 15:18:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/problem-solving-techniques/</guid><description>&lt;div align="center"&gt;
 &lt;iframe src="https://giphy.com/embed/777Aby0ZetYE8" width="480" height="259" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/cute-think-pooh-777Aby0ZetYE8"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
 &lt;p&gt;Haven't thought of anything, have you? No, neither have I. Think, think, think&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="the-feynman-algorithm"&gt;The Feynman Algorithm&lt;/h2&gt;
&lt;p&gt;The &lt;a href="http://wiki.c2.com/?FeynmanAlgorithm"&gt;Feynman algorithm&lt;/a&gt; was facetiously suggested by &lt;a href="http://en.wikipedia.org/wiki/Murray_Gell-Mann"&gt;Murray Gell-Mann&lt;/a&gt;, a colleague of &lt;a href="https://en.wikipedia.org/wiki/Richard_Feynman"&gt;Richard Feynman&lt;/a&gt;, in a New York Times interview.&lt;/p&gt;
&lt;p&gt;It is the combination of three steps:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;1. Write down the problem.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;2. Think real hard.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;3. Write down the solution.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="polyas-principles"&gt;Polya&amp;rsquo;s Principles&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;If you can&amp;#39;t solve a problem, then there is an easier problem you can
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;solve: find it.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;-- George Poyla --
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;George Polya described in his 1957 book &lt;a href="https://en.wikipedia.org/wiki/How_to_Solve_It"&gt;How to Solve It&lt;/a&gt; (HowToSolveIt) a set of heuristics for solving problems. A basic outline of his approach is pretty similar to Feynman&amp;rsquo;s Algorithm:&lt;/p&gt;</description></item><item><title>Docker and Iptables: You may do it wrong!</title><link>https://ntk148v.github.io/posts/docker-iptables/</link><pubDate>Tue, 25 Oct 2022 10:29:11 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/docker-iptables/</guid><description>&lt;h2 id="mission"&gt;Mission&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re running Docker on a host that is exposed to the Internet (network bridge), you will probably want to restrict external access.&lt;/p&gt;
&lt;h2 id="docker-network"&gt;Docker network&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with a fact that Docker manipulates &lt;code&gt;iptables&lt;/code&gt; rules to provide network isolation, on Linux. Docker installs custom iptables chains named &lt;code&gt;DOCKER&lt;/code&gt;, &lt;code&gt;DOCKER-USER&lt;/code&gt; and &lt;code&gt;DOCKER-ISOLATION-STAGE-*&lt;/code&gt;, and it ensures that incoming packets are always checked by these chains first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;iptables -L -n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Re.Docker network, I won&amp;rsquo;t describe here because it&amp;rsquo;s a lot of knowledge. You may want to check &lt;a href="https://github.com/ntk148v/til/blob/master/docker/networking/README.md"&gt;Docker network note&lt;/a&gt;. I will only show iptables packet flow: For example, we have a host with ip 10.0.10.26, then start a container that is exposed port 8000 to internet.&lt;/p&gt;</description></item><item><title>Moving from Utterances to Giscus</title><link>https://ntk148v.github.io/posts/moving-from-utterances-to-giscus/</link><pubDate>Tue, 30 Aug 2022 11:09:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/moving-from-utterances-to-giscus/</guid><description>&lt;p&gt;I&amp;rsquo;ve used &lt;a href="./lets-comment.md"&gt;Utterances&lt;/a&gt; for a while. Using Github&amp;rsquo;s issue feature as a backend for comments is a very elegant solution IM O: no tracking, no ads, simple. But today, I decide to switch to a better alternative - &lt;a href="https://github.com/giscus/giscus"&gt;Giscus&lt;/a&gt;. Giscus is heavily inspired by Utterances except one thing: instead of using Github issues it uses the fairly new Discussions features to store comments.&lt;/p&gt;
&lt;p&gt;So..&lt;/p&gt;
&lt;h2 id="why-migrate"&gt;Why migrate?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Post reactions&lt;/strong&gt;: utterances allows you to add reactions to comments but as an author I‚Äôm also interested in the general reception of the post itself. giscus provides this feature.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conversation view&lt;/strong&gt;: utterances will simply render comments as a list in the order they have been created. Giscus groups replies to a comment instead. I mean comment is about discussion, right?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="prepare-your-site"&gt;Prepare your site&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Migrate from utterances: &lt;a href="https://docs.github.com/en/discussions/managing-discussions-for-your-community/moderating-discussions#converting-an-issue-to-a-discussion"&gt;convert the existing issues into discussions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://giscus.app/"&gt;Giscus&lt;/a&gt;, it&amp;rsquo;s quite simple.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Leave a comment :point_down:&lt;/code&gt;&lt;/p&gt;</description></item><item><title>Bgp Ecmp Load Balancing</title><link>https://ntk148v.github.io/posts/bgp-ecmp-load-balancing/</link><pubDate>Mon, 07 Feb 2022 15:35:08 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/bgp-ecmp-load-balancing/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;We will build a Load balancer with &lt;a href="https://en.wikipedia.org/wiki/Border_Gateway_Protocol"&gt;BGP&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Equal-cost_multi-path_routing"&gt;Equal-Cost Multipath routing (ECMP)&lt;/a&gt; using both &lt;a href="https://bird.network.cz/"&gt;Bird&lt;/a&gt; and &lt;a href="https://github.com/Exa-Networks/exabgp"&gt;ExaBGP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/bufadu/0c3ba661c141a2176cd048f65430ae8d"&gt;How to build a load balancer with BGP and ECMP using VyOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vincent.bernat.ch/en/blog/2018-multi-tier-loadbalancer#first-tier-ecmp-routing"&gt;Multi-tier load balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.cloudflare.com/cloudflares-architecture-eliminating-single-p/"&gt;Load balancing without Load balancers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="lab-overview"&gt;Lab overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eve-ng.net/"&gt;EVE-NG&lt;/a&gt; version 2.0.3-112&lt;/li&gt;
&lt;li&gt;QEMU version 2.4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/bgp-ecmp-load-balancing/ecmp-bgp.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AS 65000&lt;/code&gt;: internet service provider. In this post, we will build a BGP session between EdgeRouter and ISP router.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ISPRouter&lt;/code&gt; and &lt;code&gt;EdgeRouter&lt;/code&gt; are &lt;a href="https://docs.fortinet.com/document/fortigate/7.0.3"&gt;Fortinet Fortigate v7.0.3&lt;/a&gt; instances. You can use other routers as well.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Switch&lt;/code&gt; is a Cisco switch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;client&lt;/code&gt;, &lt;code&gt;lb1&lt;/code&gt;, and &lt;code&gt;lb2&lt;/code&gt; are Ubuntu server 18.04 instances. &lt;code&gt;lb1&lt;/code&gt; and &lt;code&gt;lb2&lt;/code&gt; will be in the &lt;code&gt;10.12.12.0/24&lt;/code&gt; private LAN, we will install nginx (LB L7) on these. Both servers will announce the same public IP (10.13.13.1) to &lt;code&gt;EdgeRouter&lt;/code&gt; using BGP. Incoming traffic from internet to this public IP will be routed to &lt;code&gt;lb1&lt;/code&gt; or &lt;code&gt;lb2&lt;/code&gt; depending of a hash.&lt;/li&gt;
&lt;li&gt;You need to download and install device virtual images. Follow &lt;a href="https://www.eve-ng.net/index.php/documentation/howtos/howto-add-fortinet-images/"&gt;EVE-NG guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configure"&gt;Configure&lt;/h2&gt;
&lt;h3 id="isprouter"&gt;ISPRouter&lt;/h3&gt;
&lt;p&gt;Follow the &lt;a href="https://docs.fortinet.com/document/fortigate/7.0.3"&gt;Fortigate document&lt;/a&gt; for the basic commands.&lt;/p&gt;</description></item><item><title>Getting Started Tiling Wm [Part 6] I3 Rounded Corners</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</link><pubDate>Mon, 10 Jan 2022 13:45:01 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</guid><description>&lt;p&gt;According to &lt;a href="https://www.reddit.com/r/unixporn/comments/7h0rm0/what_would_you_want_in_a_wm/"&gt;Reddis post&lt;/a&gt; and &lt;a href="https://github.com/Airblader/i3/issues/167"&gt;i3-gaps issue&lt;/a&gt;, it seems like a lot of people would like this. But Airblade - i3-gaps maintainer &lt;a href="https://github.com/Airblader/i3/issues/167#issuecomment-328562433"&gt;doesn&amp;rsquo;t like it&lt;/a&gt;. But nevermind, we still have two ways to achieve it.&lt;/p&gt;
&lt;h2 id="rounded-i3-gaps"&gt;Rounded i3-gaps&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/resloved"&gt;Resloved&lt;/a&gt; have an awesome &lt;a href="https://github.com/resloved/i3"&gt;fork&lt;/a&gt; to implement rounded corners. I fork it again to keep it up-to-date with the upstream i3-gaps. You can check it &lt;a href="https://github.com/ntk148v/i3"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install i3-gaps.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Dependencies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install git libxcb1-dev libxcb-keysyms1-dev libpango1.0-dev &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; libxcb-util0-dev libxcb-icccm4-dev libyajl-dev &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; libstartup-notification0-dev libxcb-randr0-dev &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; libev-dev libxcb-cursor-dev libxcb-xinerama0-dev &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; autoconf libxcb-xrm0 libxcb-xrm-dev automake i3status &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; ninja-build meson libxcb-shape0-dev build-essential -y
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git clone https://github.com/ntk148v/i3.git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;cd&lt;/span&gt; i3/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Compile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir -p build &amp;amp;&amp;amp; &lt;span style="font-weight:bold;font-style:italic"&gt;cd&lt;/span&gt; build
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;meson ..
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;ninja
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo ninja install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Configure rounded corners by adding this to your config.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;border_radius 10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Result, but you can see that these corners look so jagged (check out this &lt;a href="https://github.com/Airblader/i3/issues/167#issuecomment-485263770"&gt;comment&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-1.png"&gt;
&lt;/figure&gt;

&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-4.png"&gt;
&lt;/figure&gt;

&lt;h2 id="picom"&gt;picom&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can also achieve rounded corners by using &lt;a href="https://github.com/yshui/picom"&gt;picom&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install picom.&lt;/li&gt;
&lt;li&gt;Configure rounded corners by changing &lt;code&gt;corner_radius&lt;/code&gt; value.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;# Path ~/.config/picom.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;corner_radius: 10;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Result looks much smoother.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-2.png"&gt;
&lt;/figure&gt;

&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-3.png"&gt;
&lt;/figure&gt;</description></item><item><title>Rename Files in Linux</title><link>https://ntk148v.github.io/posts/rename-files-in-linux/</link><pubDate>Thu, 16 Dec 2021 10:22:05 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/rename-files-in-linux/</guid><description>&lt;ul&gt;
&lt;li&gt;Rename a single file with &lt;code&gt;mv&lt;/code&gt;. Just a basic thing.&lt;/li&gt;
&lt;li&gt;Rename multiple files with &lt;code&gt;mv&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Rename files with suffix .yaml to yml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;for&lt;/span&gt; f in *.yaml; &lt;span style="font-weight:bold"&gt;do&lt;/span&gt; mv -- &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;&lt;/span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$f&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;${&lt;/span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;f&lt;/span&gt;%.yaml&lt;span style="color:#666;font-style:italic"&gt;}&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;.yml&amp;#34;&lt;/span&gt; &lt;span style="font-weight:bold"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Rename multiple files with &lt;code&gt;rename&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Install rename command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Ubuntu/Debian-derived distros&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install rename
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# RedHat-derived distros&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install prename
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# The follow examples are performed in Ubuntu/Debian-derived distros&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;s/.yaml/.yml/&amp;#39;&lt;/span&gt; *.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Replace all occurrences of &amp;#34;prev_&amp;#34; with &amp;#34;next_&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;s/prev_/next_&amp;#39;&lt;/span&gt; *.c
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Delete part of a filename&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;s/next_//&amp;#39;&lt;/span&gt; *.c
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Limit changes to specific parts of filenames&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Only change the files that start with &amp;#34;paramater&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;s/^param/parameter/&amp;#39;&lt;/span&gt; *.c
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Search with grouping&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Replace all occurrences of &amp;#34;string&amp;#34; and &amp;#34;strong&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;s/(str|stro)ng/strength&amp;#39;&lt;/span&gt; *.c
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Use translations with rename&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Force filenames to uppercase&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rename &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;y/a-z/A-Z&amp;#39;&lt;/span&gt; *.py
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# More?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;man rename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Goignore</title><link>https://ntk148v.github.io/posts/goignore/</link><pubDate>Fri, 26 Nov 2021 17:26:44 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/goignore/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/ntk148v/goignore"&gt;Goignore&lt;/a&gt; - A &lt;code&gt;.gitignore&lt;/code&gt; wizard which gnerates &lt;code&gt;.gitignore&lt;/code&gt; files from the command line for you. Inspired by &lt;a href="https://github.com/karan/joe"&gt;joe&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No installation necessary - just use the binary.&lt;/li&gt;
&lt;li&gt;Works on Linux, Windows &amp;amp; MacOS.&lt;/li&gt;
&lt;li&gt;Interactive user interface with &lt;a href="https://github.com/charmbracelet/bubbletea"&gt;bubbletea&lt;/a&gt;: Pagination, Filtering, Help&amp;hellip;&lt;/li&gt;
&lt;li&gt;Supports all Github-supported &lt;a href="https://github.com/github/gitignore.git"&gt;.gitignore files&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="install"&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download the latest binary from the &lt;a href="https://github.com/ntk148v/goignore/releases"&gt;Release page&lt;/a&gt;. It&amp;rsquo;s the easiest way to get started with &lt;code&gt;goignore&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make sure to add the location of the binary to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Just run.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;chmod a+x goignore
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;goignore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;At the first time, &lt;code&gt;goignore&lt;/code&gt; will download the Gitignore templates from Github. It may take a few seconds (depend on your network).&lt;/p&gt;</description></item><item><title>Getting Started with Tiling WM [Part 1] - I3</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I love customizing desktop. I make changes in my desktop everyday, make it look eye candy. My colleagues ask me how to make their desktop look like mine. But there are many steps and things to learn and follow, I know because I&amp;rsquo;ve gone throught it. Therefore I decide to write this getting-started guide to give people a shortest path to Fancy world.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="overview-window-manager"&gt;Overview Window Manager&lt;/h2&gt;
&lt;p&gt;First of all, you have to know the basic concepts.&lt;/p&gt;</description></item><item><title>Getting Started with Tiling WM [Part 2] - Rofi</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</guid><description>&lt;blockquote&gt;
&lt;p&gt;In the &lt;a href="https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/"&gt;part1&lt;/a&gt;, I&amp;rsquo;ve used &lt;code&gt;rofi&lt;/code&gt; instead of &lt;code&gt;dmenu&lt;/code&gt;. This part will show you how to start with &lt;code&gt;rofi&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davatorium/rofi"&gt;Rofi&lt;/a&gt; is a window switcher, application launcher and dmenu replacement.&lt;/li&gt;
&lt;li&gt;Features:
&lt;ul&gt;
&lt;li&gt;Fully configurable keyboard navigation.&lt;/li&gt;
&lt;li&gt;Type to filer.&lt;/li&gt;
&lt;li&gt;Built-in modes:
&lt;ul&gt;
&lt;li&gt;Window switcher mode.&lt;/li&gt;
&lt;li&gt;Application laucher.&lt;/li&gt;
&lt;li&gt;Desktop file application launcher.&lt;/li&gt;
&lt;li&gt;SSH laucher mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;History-based ordering.&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="getting-started"&gt;Getting started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installing &lt;code&gt;rofi&lt;/code&gt; is quite easy.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install rofi -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Run it for the first time.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;DejaVu Sans 8&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;details&gt;
 &lt;summary&gt;Details&lt;/summary&gt;
 &lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -show mode
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Open rofi in a certain mode. Available modes are window, run, drun, ssh, combi. The
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; special argument keys can be used to open a searchable list of supported key bind‚Äê
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ings (see KEY BINDINGS)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; To show the run-dialog:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; rofi -show run
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -lines
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Maximum number of lines to show before scrolling.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; rofi -lines 25
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Default: 15
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -location
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Specify where the window should be located. The numbers map to the following loca‚Äê
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; tions on screen:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 1 2 3
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 8 0 4
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 7 6 5
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Default: 0
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -padding
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Define the inner margin of the window.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Default: 5
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; -sidebar-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; Open in sidebar-mode. In this mode a list of all enabled modes is shown at the bot‚Äê
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; tom. (See -modi option) To show sidebar, use:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; rofi -show run -sidebar-mode -lines 0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;

&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-default.png"&gt;
&lt;/figure&gt;

&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-default-2.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Press hot key (defined in i3 configuration file) &lt;code&gt;&amp;lt;Window&amp;gt;+d&lt;/code&gt; to start rofi. Use &lt;code&gt;&amp;lt;Shift&amp;gt;+&amp;lt;left/right&amp;gt;&lt;/code&gt; to switch between mode.&lt;/li&gt;
&lt;li&gt;More details you can found in &lt;a href="https://github.com/davatorium/rofi"&gt;rofi github&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tweaking"&gt;Tweaking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The default setup looks quite boring. Let&amp;rsquo;s tweak a bit!&lt;/li&gt;
&lt;li&gt;There are currently three methods of setting configuration options:
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Local configuration. Normally, depending on XDG, in ~/.config/rofi/config. This uses the Xresources format&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Xresources: A method of storing key values in the Xserver. See here for more information.&lt;/li&gt;
&lt;li&gt;Command line options: Arguments are passed to Rofi.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We will use configuration file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir -p ~/.config/rofi/themes
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;touch ~/.config/rofi/themes/onedark.theme
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Copy the follow content into &lt;code&gt;~/.config/rofi/themes/onedark.theme&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;configuration {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; show-icons: true;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; font: &amp;#34;DejaVu Sans Mono 10&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; modi: &amp;#34;window,run,drun&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;* {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; background: #282c34;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; foreground: #abb2bf;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; background-color: @background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; selected-normal-foreground: @foreground;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; selected-normal-background: #98c379;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; selected-urgent-background: #e5c07b;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; selected-urgent-foreground: @foreground;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; border: 5;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; lines: 12;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; padding: 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; margin: 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; spacing: 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;window {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; width: 50%;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; transparency: &amp;#34;real&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mainbox {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; children: [inputbar, listview];
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;listview {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; columns: 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;element {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; padding: 12;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; orientation: vertical;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; text-color: @foreground;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;element selected {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; background-color: @selected-normal-background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; text-color: @background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;inputbar {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; background-color: @background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; children: [prompt, entry];
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;prompt {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; enabled: true;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; font: &amp;#34;DejaVu Sans Mono 10&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; padding: 12 0 0 12;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; text-color: @selected-urgent-background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;entry {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; padding: 12;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; text-color: @selected-urgent-background;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Run it and you can see the magic!&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rofi -theme ~/.config/rofi/themes/onedark.theme -show drun
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-custom.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t forget to update hotkey in i3 configuration file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;bindsym $mod+d exec rofi -theme ~/.config/rofi/themes/onedark.theme -show drun
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Getting Started with Tiling WM [Part 3] - Polybar</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</guid><description>&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://polybar.github.io/"&gt;According to Polybar frontpage&lt;/a&gt;, &lt;code&gt;Polybar is A fast and easy to use tool for creating status bars &lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title>Getting Started with Tiling WM [Part 4] - Xresources</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title>Getting Started with Tiling WM [Part 5] - Compton</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title>Linux tools that you never knew you needed</title><link>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</link><pubDate>Wed, 07 Apr 2021 09:45:59 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</guid><description>&lt;h2 id="bat---cat-alternative"&gt;bat - (cat alternative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;: A cat(1) clone with syntax highlighting and Git integration.&lt;/li&gt;
&lt;li&gt;Example:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/bat.png"&gt;
&lt;/figure&gt;

&lt;h2 id="fd---find-alternative"&gt;fd - (find alternative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt;: a simple, fast and user-friendly alternative to &lt;code&gt;find&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://raw.githubusercontent.com/sharkdp/fd/master/doc/screencast.svg"&gt;
&lt;/figure&gt;

&lt;h2 id="httpie---wgetcurl-alternative"&gt;httpie - (wget/curl alternative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://httpie.io"&gt;httpie&lt;/a&gt;: a user-friendly command-line HTTP client for the API era. It comes with JSON support, syntax highlighting, persistent sessions, wget-like downloads, plugins, and more.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Hello world&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ http httpie.io/hello
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Custom HTTP method, HTTP headers and JSON data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ http PUT pie.dev/put X-API-Token:123 &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;name&lt;/span&gt;=John
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Submitting forms&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ http -f POST pie.dev/post &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;hello&lt;/span&gt;=World
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Upload a file using redirect input&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ http pie.dev/post &amp;lt; files/data.json
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# For more examples, check out: https://httpie.io&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="ripgrep---grep-alternative"&gt;ripgrep - (grep alternative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;: a faster &lt;code&gt;grep&lt;/code&gt;. ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern. By default, ripgrep will respect your .gitignore and automatically skip hidden files/directories and binary files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep#quick-examples-comparing-tools"&gt;Benchmark&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Basic use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ rg fast README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Regular expressions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ rg &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;fast\w+&amp;#39;&lt;/span&gt; README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Recursive search - recursively searching the directory (current directory is default)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ rg &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;fn write\(&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# For more examples, checkout: https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="delta"&gt;delta&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dandavison/delta"&gt;delta&lt;/a&gt;: Code evolves, and we all spend time studying diffs. Delta aims to make this both efficient and enjoyable: it allows you to make extensive changes to the layout and styling of diffs, as well as allowing you to stay arbitrarily close to the default git/diff output.&lt;/li&gt;
&lt;li&gt;Diff/git diff doesn&amp;rsquo;t show you exactly what was changed.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/git-diff.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Delta shows within-line highlights based on a Levenshtein edit inference algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/delta.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;By default, delta restructures the git output slightly to make the hunk markers human-readable:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://user-images.githubusercontent.com/52205/81059276-254cf980-8e9e-11ea-95c3-8b757a4c11b5.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Example config:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[core]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; pager: delta
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[delta]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; plus-style: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;syntax #98c379&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; minus-style: &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;syntax #e06c75&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; syntax-theme: OneHalfDark
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; navigate: &lt;span style="font-weight:bold;font-style:italic"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; features: line-numbers decorations
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;[interactive]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; diffFilter: delta --color-only
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Completely replace &lt;code&gt;diff&lt;/code&gt; with &lt;code&gt;delta&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;alias&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;diff&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;delta&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="z"&gt;z&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tired for &lt;code&gt;cd&lt;/code&gt;ing into the same directories over and over? Save your time with &lt;code&gt;z&lt;/code&gt; command!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rupa/z"&gt;z&lt;/a&gt;: jump around. Z is a shell script that makes jumping around your file directory pleasantly simple. Instead of trying to remember the exact path of where you need to go, or worse, &lt;code&gt;cd&lt;/code&gt;ing into the next directory followed by &lt;code&gt;ls&lt;/code&gt;ing and then cding again over and over (we‚Äôve all been there), Z allows you to ‚Äúlazy type‚Äù where you want to go and it‚Äôll handle the rest.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Takes me to my workspace folder from anywhere.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ z workspace
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="fzf"&gt;fzf&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;: fzf is a general-purpose command-line fuzzy finder.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Read the list from STDIN and write the selected item to STDOUT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ find * -type f | fzf &amp;gt; selected
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ vim &lt;span style="font-weight:bold"&gt;$(&lt;/span&gt;fzf&lt;span style="font-weight:bold"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# COMMAND **&amp;lt;TAB&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Files under the current directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# - You can select multiple items with TAB key&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ vim **&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Files under parent directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ vim ../**&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Files under parent directory that match `fzf`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ vim ../fzf**&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Files under your home directory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ vim ~/**&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Directories under current directory (single-selection)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;cd&lt;/span&gt; **&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Directories under ~/github that match `fzf`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;cd&lt;/span&gt; ~/github/fzf**&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Can select multiple processes with &amp;lt;TAB&amp;gt; or &amp;lt;Shift-TAB&amp;gt; keys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;kill&lt;/span&gt; -9 &amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;unset&lt;/span&gt; **&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;export&lt;/span&gt; **&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="font-weight:bold;font-style:italic"&gt;unalias&lt;/span&gt; **&amp;lt;TAB&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# For more examples, checkout: https://github.com/junegunn/fzf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/fzf-vim.png"&gt;
&lt;/figure&gt;

&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/fzf-cd.png"&gt;
&lt;/figure&gt;

&lt;h2 id="thefuck"&gt;thefuck&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvbn/thefuck"&gt;thefuck&lt;/a&gt;: Magnificent app which corrects your previous console command.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://raw.githubusercontent.com/nvbn/thefuck/master/example.gif"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ apt-get install vim
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fuck
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt-get install vim [enter/‚Üë/‚Üì/ctrl+c]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Reading package lists... Done
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# For more examples, check out: https://github.com/nvbn/thefuck&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="exa---ls-alternative"&gt;exa - (ls alternative)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://the.exa.website"&gt;exa&lt;/a&gt;: A modern replacement for ls. &lt;code&gt;exa&lt;/code&gt; is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it‚Äôs small, fast, and just one single binary.&lt;/li&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/exa.png"&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Completely replace &lt;code&gt;ls&lt;/code&gt; with &lt;code&gt;exa&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;alias&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;ls&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;exa&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure class="figure"&gt;&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/exa-ls.png"&gt;
&lt;/figure&gt;</description></item><item><title>Set Animated Gif as Wallpaper</title><link>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</link><pubDate>Thu, 14 Jan 2021 09:36:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Environment Ubuntu 20.04&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="dependencies"&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ujjwal96/xwinwrap"&gt;Xwinwrap&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt-get install xorg-dev build-essential libx11-dev x11proto-xext-dev libxrender-dev libxext-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git clone https://github.com/ujjwal96/xwinwrap.git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;cd&lt;/span&gt; xwinwrap
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;make clean
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Gifsicle:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt install gifsicle
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="the-helper-script"&gt;The helper script&lt;/h2&gt;
&lt;p&gt;A helper script to setup animated .gif in dual monitors.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-weight:bold"&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-weight:bold"&gt;&lt;/span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Uses xwinwrap to display given animated .gif in dual monitors.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;if&lt;/span&gt; [ &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$#&lt;/span&gt; -ne 1 ]; &lt;span style="font-weight:bold"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;font-style:italic"&gt;echo&lt;/span&gt; 1&amp;gt;&amp;amp;2 Usage: &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$0&lt;/span&gt; image.gif
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold;font-style:italic"&gt;exit&lt;/span&gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;gif&lt;/span&gt;=&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;killall -9 xwinwrap
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;killall -9 gifview
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Get monitors resolution&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;SCR1&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;xrandr | awk &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;/primary/ &amp;amp;&amp;amp; /connected/ { print $4 }&amp;#39;&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;SCR2&lt;/span&gt;=&lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;xrandr | awk &lt;span style="color:#666;font-style:italic"&gt;&amp;#39;!/primary/ &amp;amp;&amp;amp; /connected/ { print $3 }&amp;#39;&lt;/span&gt;&lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;xwinwrap -g &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$SCR1&lt;/span&gt; -ov -ni -s -nf -- gifview -w WID &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$gif&lt;/span&gt; -a &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;xwinwrap -g &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$SCR2&lt;/span&gt; -ov -ni -s -nf -- gifview -w WID &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;$gif&lt;/span&gt; -a &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to run xwinwrap by yourself, here is the example:&lt;/p&gt;</description></item><item><title>Swap space note</title><link>https://ntk148v.github.io/posts/linux-swap-space-note/</link><pubDate>Wed, 20 May 2020 09:30:28 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-swap-space-note/</guid><description>&lt;h2 id="what-is-swap"&gt;What is Swap?&lt;/h2&gt;
&lt;p&gt;Swap file systems support virtual memory, data is written to a swap file system when there is not enough RAM to store the data your system is processing.&lt;/p&gt;
&lt;h2 id="swap-partition-size"&gt;Swap partition size&lt;/h2&gt;
&lt;h3 id="old-rule-of-thumb"&gt;Old rule of thumb&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;swap: 2 * the-amount-of-RAM
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So if a computer had 64KB of RAM, a swap partition of 128KB would be an optimum size. This rule took into the facts that RAM sizes were typically quite small at the time. Nowadays, RAM has become a &lt;code&gt;cheap&lt;/code&gt; &amp;amp; &lt;code&gt;affordable&lt;/code&gt; commondity, so the 2x rule is outdated.&lt;/p&gt;</description></item><item><title>Ansitheus</title><link>https://ntk148v.github.io/posts/ansitheus/</link><pubDate>Tue, 05 May 2020 13:51:59 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/ansitheus/</guid><description>&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;Ansitheus: Ansible + Prometheus
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="prometheus-overview"&gt;Prometheus overview&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Checkout the &lt;a href="https://prometheus.io/docs/introduction/overview/"&gt;Prometheus official documentation&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/prometheus"&gt;Prometheus&lt;/a&gt; is an open-source systems monitoring &amp;amp; alerting toolkit originally built at SoundCloud.&lt;/p&gt;
&lt;h3 id="features"&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;a multi-dimensional data model with time series data identified by metric name &amp;amp; key/value pairs&lt;/li&gt;
&lt;li&gt;PromQL, a flexible query language to leverage this dimensionality&lt;/li&gt;
&lt;li&gt;no reliance on distributed storage; single server nodes are autonomous&lt;/li&gt;
&lt;li&gt;time series collection happens via a pull model over HTTP&lt;/li&gt;
&lt;li&gt;pushing time series is supported via an intermediary gateway&lt;/li&gt;
&lt;li&gt;targets are discovered via service discovery or static configuration&lt;/li&gt;
&lt;li&gt;multiple modes of graphing &amp;amp; dashboarding support&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="architecture--components"&gt;Architecture &amp;amp; components&lt;/h3&gt;
&lt;p&gt;Prometheus scrapes metrics from instrumented jobs, either directly or via an intermediary push gateway for short-lived jobs. It stores all scraped samples locally &amp;amp; runs rules over this data to either aggregate &amp;amp; record new time series from existing data or generate alerts. Grafana or other API consumers can be used to visualize the collected data.&lt;/p&gt;</description></item><item><title>Operate Etcd cluster</title><link>https://ntk148v.github.io/posts/operate-etcd-cluster/</link><pubDate>Tue, 28 Apr 2020 11:24:04 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/operate-etcd-cluster/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This is my perspective aggregation. You can easily find these such of knowledges in &lt;a href="#5-references"&gt;the references&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="context"&gt;Context&lt;/h2&gt;
&lt;p&gt;Etcd Version &lt;code&gt;v3.4.0&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="requirements"&gt;Requirements&lt;/h2&gt;
&lt;h3 id="number-of-nodes"&gt;Number of nodes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&amp;gt;= 3 nodes. A etcd cluster needs a majority of nodes, a quorum to agree on updates to the cluster state. For a cluster with &lt;strong&gt;n-members&lt;/strong&gt;, quorum is &lt;strong&gt;(n/2)+1&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="cpus"&gt;CPUs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Etcd doesn&amp;rsquo;t require a lot of CPU capacity.&lt;/li&gt;
&lt;li&gt;Typical clusters need &lt;strong&gt;2-4 cores&lt;/strong&gt; to run smoothly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="memory"&gt;Memory&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Etcd performance depends on having enough memory (cache key-value data, tracking watchers&amp;hellip;).&lt;/li&gt;
&lt;li&gt;Typical &lt;strong&gt;8GB&lt;/strong&gt; is enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="disk"&gt;Disk&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;An etcd cluster is very sensitive to disk latencies. Since etcd must persist proposals to its log, disk activity from other processes may cause long &lt;code&gt;fsync&lt;/code&gt; latencies. The upshot is etcd may miss heartbeats, causing request timeouts and temporary leader loss. An etcd server can sometimes stably run alongside these processes when given a high disk priority.&lt;/li&gt;
&lt;li&gt;Check whether a disk is fast enough for etcd using &lt;a href="https://github.com/axboe/fio"&gt;fio&lt;/a&gt;. If the 99th percentile of fdatasync is &lt;strong&gt;&amp;lt;10ms&lt;/strong&gt;, your storage is ok.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ fio --rw=write --ioengine=sync --fdatasync=1 --directory=test-data &lt;span style="color:#666;font-style:italic"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#666;font-style:italic"&gt;&lt;/span&gt; --size=22m --bs=2300 --name=mytest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SSD&lt;/strong&gt; is recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="network"&gt;Network&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Etcd cluster should be deployed in a fast and reliable network. Low latency ensures etcd members can communicate fast. High bandwidth can reduce the time to recover a failed etcd member.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1GbE&lt;/strong&gt; is sufficient for common etcd.&lt;/li&gt;
&lt;li&gt;Note that the network isn&amp;rsquo;t the only source of latency. Each request and response may be impacted by slow disks on both the leader and followers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tuning"&gt;Tuning&lt;/h2&gt;
&lt;h3 id="time-parameters"&gt;Time parameters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Heartbeat interval&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;The frequency with which the leader will notify followers that it is still the leader.&lt;/li&gt;
&lt;li&gt;Default: &lt;strong&gt;100ms&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Best practice: &lt;strong&gt;Around 0.5-1.5 x round-trip time (RTT) between members&lt;/strong&gt;. Measure RTT with &lt;code&gt;ping&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Tradeoff: Too low -&amp;gt; etcd will send unnecessary messages -&amp;gt; increase the usage of CPU and network resources. Too high -&amp;gt; leads to high election timeout.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Election timeout&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;How long a follower node will go without hearing a heartbeat before attempting to become leader itself.&lt;/li&gt;
&lt;li&gt;Default: &lt;strong&gt;1000ms&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Best practice: &lt;strong&gt;&amp;gt;= 10 x RTT and &amp;lt; 50s&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The heartbeat interval and election timeout value should be &lt;strong&gt;the same for all members in one cluster&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Command line arguments:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ etcd --heartbeat-interval=100 --election-timeout=500
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Environment variables:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;ETCD_HEARTBEAT_INTERVAL&lt;/span&gt;=100 &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;ETCD_ELECTION_TIMEOUT&lt;/span&gt;=500 etcd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="disk-1"&gt;Disk&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;An etcd server can sometimes stably run alongside these processes when given a high disk priority using &lt;a href="https://linux.die.net/man/1/ionice"&gt;ionice&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# best effort, highest priority&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ sudo ionice -c2 -n0 -p &lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;pgrep etcd&lt;span style="color:#666;font-style:italic"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="snapshot"&gt;Snapshot&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;etcd appends all key changes to a log file -&amp;gt; huge log that grows forever :point_up:&lt;/li&gt;
&lt;li&gt;Solution: Make periodic snapshots (save the current and remove old logs).&lt;/li&gt;
&lt;li&gt;Default: make snapshots after every &lt;strong&gt;10 000 changes&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Tuning: Just in case that etcd&amp;rsquo;s memory and disk usage is too high, lower threshold.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Command line arguments:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ etcd --snapshot-count=5000
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# Environment variables:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;ETCD_SNAPSHOT_COUNT&lt;/span&gt;=5000 etcd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="maintenance"&gt;Maintenance&lt;/h2&gt;
&lt;h3 id="history-compaction"&gt;History compaction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Etcd keeps an exact history of its keyspace, the history should be periodically compacted to avoid performance degradation and eventual storage space exhaustion.&lt;/li&gt;
&lt;li&gt;Etcd can be set to automatically compact the keyspace with the &lt;code&gt;--auto-compaction-*&lt;/code&gt; option with a period of hours.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#888;font-style:italic"&gt;# keep one hour of history&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ etcd --auto-compaction-retention=1 --auto-compaction-mode=periodic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Compaction modes:
&lt;ul&gt;
&lt;li&gt;Revision-based: &lt;code&gt;--auto-compaction-mode=revision --auto-compaction-retention=1000&lt;/code&gt; automatically Compact on &amp;ldquo;latest revision&amp;rdquo; - 1000 every 5-minute (when latest revision is 30000, compact on revision 29000). Use this when having a large keyspace.&lt;/li&gt;
&lt;li&gt;Periodic: &lt;code&gt;--auto-compaction-mode=periodic --auto-compaction-retention=72h&lt;/code&gt; automatically Compact with 72-hour retention window every 1-hour. Use this when having a huge number of revisions for a key-value pair.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="defragmentation"&gt;Defragmentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Compacting old revisions internally fragments etcd by leaving gaps in backend database - &lt;code&gt;internal fragmentation&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Internal fragmentation space is available for use by etcd but unavailable to the host filesystem.&lt;/li&gt;
&lt;li&gt;Solution: Release this space back to the filesystem with defrag.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ etcdctl defrag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;It should be run rather infrequently, as there is always going to be an unavoidable pause.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Etcd hardware: &lt;a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/hardware.md"&gt;https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/hardware.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etcd tuning: &lt;a href="https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md"&gt;https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Etcd maintainence: &lt;a href="https://etcd.io/docs/v3.4.0/op-guide/maintenance/"&gt;https://etcd.io/docs/v3.4.0/op-guide/maintenance/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Golang: Block forever</title><link>https://ntk148v.github.io/posts/golang-block-forever/</link><pubDate>Mon, 27 Apr 2020 15:59:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-block-forever/</guid><description>&lt;p&gt;Sometimes, you want to block the current goroutine when allowing others to continue. Here is some tricks I&amp;rsquo;ve collected:&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;Firstly give them some credits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/"&gt;https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pliutau.com/different-ways-to-block-go-runtime-forever/"&gt;https://pliutau.com/different-ways-to-block-go-runtime-forever/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: I run these with Golang 1.12&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="the-original"&gt;The original&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;package&lt;/span&gt; main
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;import&lt;/span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;func&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;show&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold"&gt;for&lt;/span&gt; i := 1; i &amp;lt; 9696969; i++ {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; time.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Sleep&lt;/span&gt;(1000)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; fmt.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Println&lt;/span&gt;(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;func&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold"&gt;go&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;show&lt;/span&gt;() &lt;span style="color:#888;font-style:italic"&gt;// The main goroutine is exited before the show() be done.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; fmt.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Println&lt;/span&gt;(&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;OK we&amp;#39;re done&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="bad---an-empty-infinite-loop"&gt;Bad - An empty infinite loop&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-go" data-lang="go"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;package&lt;/span&gt; main
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold"&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#666;font-style:italic"&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;func&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;forever&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold"&gt;for&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#888;font-style:italic"&gt;// Empty, just do nothing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;func&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;show&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold"&gt;for&lt;/span&gt; i := 1; i &amp;lt; 9696969; i++ {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; time.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Sleep&lt;/span&gt;(5 * time.Second)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; fmt.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Println&lt;/span&gt;(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="font-weight:bold;font-style:italic"&gt;func&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="font-weight:bold"&gt;go&lt;/span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;show&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;forever&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; fmt.&lt;span style="color:#666;font-weight:bold;font-style:italic"&gt;Println&lt;/span&gt;(&lt;span style="color:#666;font-style:italic"&gt;&amp;#34;OK we&amp;#39;re done&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;An infinite loop here is a busy loop that does nothing except burn CPU time.&lt;/p&gt;</description></item><item><title>Rest In Peace Kobe Bryant</title><link>https://ntk148v.github.io/posts/rip-kobe-bryant/</link><pubDate>Mon, 27 Jan 2020 22:15:07 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/rip-kobe-bryant/</guid><description>&lt;p&gt;&lt;img src="./theundefeated-kobe-bryant.pg" alt=""&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://theundefeated.com/features/kobe-vs-kobe-bryant-lakers-numbers-8-and-24-jersey-retirement/"&gt;The Undefeated&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am not Kobe fan honestly but just like him, basketball is something I love. I hope he&amp;rsquo;s at peace because although his journey in life is over, the legacy he left behind is etched in all our souls.&lt;/p&gt;
&lt;p&gt;Rest In Peace Mamba :basketball:&lt;/p&gt;
&lt;p&gt;&lt;img src="./kobe.jpg" alt=""&gt;&lt;/p&gt;</description></item><item><title>Openstack Autoscaling New Approach</title><link>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</link><pubDate>Mon, 19 Aug 2019 21:19:38 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</guid><description>&lt;blockquote&gt;
&lt;p&gt;NOTE(kiennt): There is a &lt;a href="https://github.com/vCloud-DFTBA/faythe/blob/legacy/docs/autoscaling.md"&gt;legacy Faythe guideline&lt;/a&gt;. The new version is coming soon, check &lt;a href="https://github.com/vCloud-DFTBA/faythe"&gt;its repository&lt;/a&gt; for status.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This guide describes how to automatically scale out your Compute instances in response to heavy system usage. By combining with Prometheus pre-defined rules that consider factors such as CPU or memory usage, you can configure OpenStack Orchestration (Heat) to add and remove additional instances automatically, when they are needed.&lt;/p&gt;
&lt;h2 id="the-standard-openstack-autoscaling-approach"&gt;The standard OpenStack Autoscaling approach&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s talk about the standard OpenStack Autoscaling approach before goes to the new approach.&lt;/p&gt;</description></item><item><title>Lets Comment</title><link>https://ntk148v.github.io/posts/lets-comment/</link><pubDate>Tue, 02 Oct 2018 09:47:11 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/lets-comment/</guid><description>&lt;p&gt;Hugo ships with support for Disqus, a third-party service that provides comment and community capabilities to websites via JavaScript. But Disqus generates a shit load of page requests and heavy contents&amp;hellip; which even with the benefits that come with having Disqus in place. People just want something that can be used to post a comment, that is.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why I choose a Disqus alternative - &lt;a href="https://utteranc.es/"&gt;Utterances&lt;/a&gt;. Utterances is a lightweight comments widget built on Github issues. Use Github issues for blog comments, wiki pages and more!&lt;/p&gt;</description></item></channel></rss>