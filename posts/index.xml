<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on kiennt26's home</title><link>https://ntk148v.github.io/posts/</link><description>Recent content in Posts on kiennt26's home</description><generator>Hugo</generator><language>en-us</language><managingEditor>kiennt2609@gmail.com (Kien Nguyen-Tuan)</managingEditor><webMaster>kiennt2609@gmail.com (Kien Nguyen-Tuan)</webMaster><lastBuildDate>Mon, 16 Jun 2025 11:00:28 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Server-sent Events (SSE)</title><link>https://ntk148v.github.io/posts/sse-fastapi/</link><pubDate>Tue, 10 Jun 2025 13:34:12 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/sse-fastapi/</guid><description>&lt;h1 id="the-introverts-guide-to-real-time-web-updates-">The Introvert&amp;rsquo;s Guide to Real-time Web Updates 🙈&lt;/h1>
&lt;p>Ever felt like WebSocket is that extroverted friend who&amp;rsquo;s always trying to start a conversation? &amp;ldquo;Hey server, how are you?&amp;rdquo; &amp;ldquo;I&amp;rsquo;m fine client, how are you?&amp;rdquo; &amp;ldquo;I&amp;rsquo;m good too!&amp;rdquo; 🙄&lt;/p>
&lt;p>Well, meet Server-sent Events (SSE) - the introvert&amp;rsquo;s dream come true in the world of real-time web communications. It&amp;rsquo;s like having a friend who&amp;rsquo;s totally cool with you just listening while they do all the talking. Perfect, right?&lt;/p></description></item><item><title>A clumsy Docker network notes</title><link>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</link><pubDate>Tue, 12 Dec 2023 14:47:26 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</guid><description>&lt;h1 id="a-clumsy-docker-networking-notes">A clumsy Docker networking notes&lt;/h1>
&lt;p>Nguồn:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ntk148v/til/tree/master/docker/networking">https://github.com/ntk148v/til/tree/master/docker/networking&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://argus-sec.com/docker-networking-behind-the-scenes/">https://argus-sec.com/docker-networking-behind-the-scenes/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/network/">https://docs.docker.com/network/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md">https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/engine/tutorials/networkingcontainers/">https://docs.docker.com/engine/tutorials/networkingcontainers/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/network/iptables/">https://docs.docker.com/network/iptables/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj">https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="khái-niệm">Khái niệm&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Các khái niệm:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://man7.org/linux/man-pages/man8/ip-netns.8.html">Network namespace&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Trước khi đi vào network namespace, cần hiểu về &lt;strong>Namespace&lt;/strong>. Namespace là một tính năng của Linux kernel để phân vùng tài nguyên của kernel sao cho một tập hợp các process chỉ nhìn thấy tập hợp các tài nguyên (trong namespace đó) trong khi một tập hợp các process khác nhìn thấy tập các tài nguyên khác (trong namespace khác). Tính năng này hoạt động bằng cách đưa tập các tài nguyên và process vào cùng một namespace, các namespace khác nhau sẽ tham chiếu đến các tài nguyên riêng biệt. Tài nguyên có thể tồn tại trong nhiều không gian. Ví dụ về các tài nguyên như vậy là process ID, hostname, user ID, tên file và một số tên (name) liên quan đến quyền truy cập mạng và giao tiếp giữa các process.&lt;/li>
&lt;li>Networking namespace là một trong các loại namespace. Mỗi network namespace có &lt;a href="https://en.wikipedia.org/wiki/Network_stack">network stack&lt;/a> riêng: địa chỉ IP, network interface, route table, &amp;hellip;&lt;/li>
&lt;li>Bạn có thể xem thao tác các network namespace bằng câu lệnh sau:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo ip netns &amp;lt;sub-command&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://wiki.archlinux.org/index.php/Network_bridge">Network bridge&lt;/a>: một thiết bị mạng ảo chuyển tiếp các gói giữa hai hoặc nhiều phân đoạn mạng.&lt;/p></description></item><item><title>Writing a Simple Shell in C Sharp</title><link>https://ntk148v.github.io/posts/writing-a-simple-shell-in-c-sharp/</link><pubDate>Sun, 20 Aug 2023 23:15:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/writing-a-simple-shell-in-c-sharp/</guid><description>&lt;p>In this post, we will write a minimalistic shell for UNIX(-like) operating systems in C# programming language. I create this for learning C# purpose.&lt;/p>
&lt;p>Since its purpose demonstration (not feature completeness or even fitness for causual use), it has many limitations, including:&lt;/p>
&lt;ul>
&lt;li>Commands must be on a single line.&lt;/li>
&lt;li>Arguments must be separated by whitespace.&lt;/li>
&lt;li>No quoting arguments or escaping whitespace.&lt;/li>
&lt;li>No piping or redirection.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Before we start, make sure you have .NET Core environment and knownledge.&lt;/p></description></item><item><title>Golang Async</title><link>https://ntk148v.github.io/posts/golang-async/</link><pubDate>Fri, 21 Jul 2023 16:16:31 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-async/</guid><description>&lt;blockquote>
&lt;p>This article is Golang version of &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/">Asynchronous programming with async and await guideline&lt;/a>. They did really good job to demonstrate how asynchronous programming looks like.&lt;/p>
&lt;p>You can find source code &lt;a href="https://github.com/ntk148v/testing/tree/master/golang/breakfast">here&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;p>Throughout this article, we&amp;rsquo;ll write the instructions to make a breakfast.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1. Pour a cup of coffee.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Heat a pan, then fry two eggs.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Fry three slices of bacon.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. Toast two pieces of bread.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. Add butter and jam to the toast.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. Pour a glass of orange juice.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each step takes time to finish, for example, you have to wait X seconds to make a glass of orange juice. Let&amp;rsquo;s write those instructions as Golang:&lt;/p></description></item><item><title>Linux Run in the Background</title><link>https://ntk148v.github.io/posts/linux-run-in-the-background/</link><pubDate>Fri, 03 Mar 2023 14:28:09 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-run-in-the-background/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Environment:&lt;/strong> Ubuntu 22.04, but it should work in other Linux distributions.&lt;/p>
&lt;p>&lt;strong>Source&lt;/strong>: &lt;a href="https://www.sobyte.net/post/2023-03/linux-services-in-the-background/">https://www.sobyte.net/post/2023-03/linux-services-in-the-background/&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>You run some commands, it may take a long time to execute, and you don&amp;rsquo;t want to wait for it. So what should you do in that scenario?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">A(You don&amp;#39;t want to wait &amp;lt;br&amp;gt;for a running command) --&amp;gt; B{Do you want to see output?}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">A --&amp;gt; C{Do you want the command to stay &amp;lt;br&amp;gt;running after the session ends?}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">C --&amp;gt; |Yes| E(screen)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">B --&amp;gt; |No| D(Ctrl-Z or &amp;amp;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">B --&amp;gt; |Yes| F{Do you have requirements &amp;lt;br&amp;gt;for log cutting, running users?}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">F --&amp;gt; |No| G(nohup)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">F --&amp;gt; |Yes| H(supervisor or systemd)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ctrl-z-or-">Ctrl-Z or &amp;amp;&lt;/h2>
&lt;p>For example, you have to excute &lt;code>ping&lt;/code> command:&lt;/p></description></item><item><title>Linux Network Performance Ultimate Guide</title><link>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</link><pubDate>Fri, 24 Feb 2023 17:22:02 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</guid><description>&lt;blockquote>
&lt;p>The following content is from &lt;a href="https://github.com/ntk148v/til/blob/master/linux/network-performance-ultimate-guide.md">my #til github&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>Source&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/leandromoreira/linux-network-performance-parameters/">https://github.com/leandromoreira/linux-network-performance-parameters/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf">https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.coverfire.com/articles/queueing-in-the-linux-network-stack/">https://www.coverfire.com/articles/queueing-in-the-linux-network-stack/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.cloudflare.com/how-to-achieve-low-latency/">https://blog.cloudflare.com/how-to-achieve-low-latency/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.cloudflare.com/how-to-receive-a-million-packets/">https://blog.cloudflare.com/how-to-receive-a-million-packets/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://beej.us/guide/bgnet/html/">https://beej.us/guide/bgnet/html/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/armlinuxww/article/details/111930788">https://blog.csdn.net/armlinuxww/article/details/111930788&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/linux-on-systems?topic=recommendations-network-performance-tuning">https://www.ibm.com/docs/en/linux-on-systems?topic=recommendations-network-performance-tuning&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="linux-networking-stack">Linux Networking stack&lt;/h2>
&lt;p>&lt;strong>Source:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://blog.packagecloud.io/illustrated-guide-monitoring-tuning-linux-networking-stack-receiving-data/">https://blog.packagecloud.io/illustrated-guide-monitoring-tuning-linux-networking-stack-receiving-data/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-receiving-data/">https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-receiving-data/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-sending-data/">https://blog.packagecloud.io/monitoring-tuning-linux-networking-stack-sending-data/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.sobyte.net/post/2022-10/linux-net-snd-rcv/">https://www.sobyte.net/post/2022-10/linux-net-snd-rcv/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://juejin.cn/post/7106345054368694280">https://juejin.cn/post/7106345054368694280&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://openwrt.org/docs/guide-developer/networking/praxis">https://openwrt.org/docs/guide-developer/networking/praxis&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.51cto.com/u_15169172/2710604">https://blog.51cto.com/u_15169172/2710604&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://sn0rt.github.io/media/paper/TCPlinux.pdf">https://sn0rt.github.io/media/paper/TCPlinux.pdf&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://medium.com/coccoc-engineering-blog/linux-network-ring-buffers-cea7ead0b8e8">https://medium.com/coccoc-engineering-blog/linux-network-ring-buffers-cea7ead0b8e8&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The complete network data flow:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://web.archive.org/web/20170905131225if_/https://wiki.linuxfoundation.org/images/1/1c/Network_data_flow_through_kernel.png" alt="">&lt;/p>
&lt;ul>
&lt;li>It&amp;rsquo;s a getting started. Before perform any tuning, let make sure that we understand how computers running Linux receive packets.&lt;/li>
&lt;li>Linux queue:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/leandromoreira/linux-network-performance-parameters/raw/master/img/linux_network_flow.png" alt="">&lt;/p>
&lt;p>&lt;strong>NOTE&lt;/strong>: The follow sections will heavily use &lt;code>sysctl&lt;/code>. If you don&amp;rsquo;t familiar with this command, take a look at &lt;a href="#204-sysctl">HOWTO#sysctl section&lt;/a>.&lt;/p></description></item><item><title>Goat Playground</title><link>https://ntk148v.github.io/posts/goat-playground/</link><pubDate>Tue, 31 Jan 2023 14:15:12 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/goat-playground/</guid><description>&lt;p>Hey, this is a simple post to play with &lt;a href="https://github.com/blampe/goat">GoAT Diagram&lt;/a>.&lt;/p>



&lt;div class="goat svg-container ">
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 760 841"
 >
 &lt;g transform='translate(8,16)'>
&lt;path d='M 64,32 L 128,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 176,32 L 192,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,32 L 224,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,32 L 240,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,32 L 304,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,32 L 336,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,32 L 352,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,32 L 408,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 456,32 L 464,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,32 L 528,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,32 L 576,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,32 L 664,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 680,32 L 688,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 64,64 L 128,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 176,64 L 192,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,64 L 224,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,64 L 240,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,64 L 304,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,64 L 336,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,64 L 352,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,64 L 408,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 456,64 L 464,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,64 L 528,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,64 L 576,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,64 L 632,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 648,64 L 688,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,128 L 608,128' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,144 L 296,144' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,160 L 272,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,160 L 352,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,160 L 608,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 376,176 L 528,176' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,192 L 352,192' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,208 L 608,208' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,240 L 280,240' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,240 L 448,240' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 568,272 L 624,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 688,272 L 744,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 40,288 L 112,288' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,288 L 312,288' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,288 L 464,288' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 120,304 L 232,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,304 L 408,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,304 L 608,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,304 L 728,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 632,320 L 664,320' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 40,336 L 112,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,336 L 312,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 24,368 L 128,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,368 L 328,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,368 L 464,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,368 L 608,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,368 L 728,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 32,416 L 72,416' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 144,416 L 184,416' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,432 L 344,432' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,432 L 392,432' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,432 L 440,432' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 88,448 L 128,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 200,448 L 240,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,448 L 576,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 576,448 L 624,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,448 L 672,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,448 L 720,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 32,480 L 72,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 144,480 L 184,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,480 L 344,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,480 L 392,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,480 L 440,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,480 L 560,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,480 L 608,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,480 L 656,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 656,480 L 704,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 88,512 L 128,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 200,512 L 240,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,512 L 544,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 544,512 L 592,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 592,512 L 640,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,512 L 688,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,528 L 344,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,528 L 392,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,528 L 440,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 32,544 L 72,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 144,544 L 184,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,544 L 528,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,544 L 576,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 576,544 L 624,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,544 L 672,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 88,576 L 128,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 200,576 L 240,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,576 L 344,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,576 L 392,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,576 L 440,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,576 L 512,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,576 L 560,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,576 L 608,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,576 L 656,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,608 L 224,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,608 L 256,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,608 L 288,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,608 L 320,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,608 L 352,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,608 L 432,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,608 L 464,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,608 L 496,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,608 L 528,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,608 L 584,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,608 L 648,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,624 L 616,624' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,640 L 224,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,640 L 256,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,640 L 288,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,640 L 320,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,640 L 352,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,640 L 416,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,640 L 448,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,640 L 480,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,640 L 512,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,640 L 584,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,640 L 648,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,656 L 616,656' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,672 L 224,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,672 L 256,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,672 L 288,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,672 L 320,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,672 L 352,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,672 L 432,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,672 L 464,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,672 L 496,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,672 L 528,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,672 L 584,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,672 L 648,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,688 L 616,688' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,704 L 224,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,704 L 256,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,704 L 288,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,704 L 320,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,704 L 352,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,704 L 416,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,704 L 448,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,704 L 480,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,704 L 512,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,704 L 584,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,704 L 648,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 64,360 L 88,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 264,360 L 288,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 52,616 L 76,616' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 116,616 L 140,616' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 20,632 L 44,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 84,632 L 108,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 52,648 L 76,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 116,648 L 140,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 20,664 L 44,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 84,664 L 108,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 52,680 L 76,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 116,680 L 140,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 20,696 L 44,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 84,696 L 108,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 52,712 L 76,712' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 116,712 L 140,712' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 40,288 L 40,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,240 L 80,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 112,288 L 112,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,16 L 192,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,64 L 192,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,608 L 192,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,640 L 192,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,672 L 192,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,16 L 224,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,64 L 224,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,608 L 224,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,640 L 224,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,672 L 224,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,288 L 240,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,608 L 256,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,640 L 256,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,672 L 256,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 280,208 L 280,240' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,608 L 288,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,640 L 288,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,672 L 288,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,432 L 296,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,480 L 296,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 296,528 L 296,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,16 L 304,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,32 L 304,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,64 L 304,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 312,288 L 312,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,608 L 320,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,640 L 320,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,672 L 320,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,16 L 336,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,32 L 336,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,64 L 336,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,208 L 336,240' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,432 L 344,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,480 L 344,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 344,528 L 344,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 352,608 L 352,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 352,640 L 352,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 352,672 L 352,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,432 L 392,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,480 L 392,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 392,528 L 392,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,16 L 416,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,304 L 416,352' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 440,432 L 440,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 440,480 L 440,528' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 440,528 L 440,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,16 L 448,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,240 L 448,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,304 L 480,352' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,16 L 528,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,64 L 528,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 536,144 L 536,192' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,304 L 552,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,608 L 552,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,640 L 552,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,672 L 552,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,16 L 560,32' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,64 L 560,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,224 L 584,256' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,608 L 584,624' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,624 L 584,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,640 L 584,656' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,656 L 584,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,672 L 584,688' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 584,688 L 584,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,304 L 608,320' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,320 L 608,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,336 L 608,352' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,352 L 608,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,608 L 616,624' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,624 L 616,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,640 L 616,656' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,656 L 616,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,672 L 616,688' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 616,688 L 616,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,144 L 624,192' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,272 L 624,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,48 L 640,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 648,608 L 648,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 648,640 L 648,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 648,672 L 648,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,16 L 672,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,304 L 672,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,304 L 728,320' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,320 L 728,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,336 L 728,352' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,352 L 728,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 744,272 L 744,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 24,368 L 40,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 36,360 L 44,344' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,360 L 52,344' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 16,448 L 32,416' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 16,512 L 32,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 72,480 L 88,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 12,648 L 20,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 72,544 L 88,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 12,680 L 20,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,448 L 144,416' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,632 L 52,616' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,664 L 52,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,512 L 144,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,696 L 52,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,648 L 84,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,368 L 240,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,680 L 84,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,576 L 144,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 236,360 L 244,344' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,632 L 116,616' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 184,480 L 200,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 244,360 L 252,344' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,712 L 84,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,664 L 116,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,696 L 116,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 184,544 L 200,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,648 L 148,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,680 L 148,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,712 L 148,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,512 L 256,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,576 L 256,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,640 L 400,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,304 L 568,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,704 L 400,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,672 L 416,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,640 L 432,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,576 L 480,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,544 L 496,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,512 L 512,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,480 L 528,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,304 L 624,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,704 L 432,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,672 L 448,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,640 L 464,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,320 L 624,288' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,336 L 624,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,352 L 624,320' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,368 L 624,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,704 L 464,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,672 L 480,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,640 L 496,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,576 L 528,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,544 L 544,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 544,512 L 560,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,480 L 576,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,304 L 688,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,704 L 496,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,672 L 512,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,640 L 528,608' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,576 L 576,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 576,544 L 592,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 592,512 L 608,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,480 L 624,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,704 L 528,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,304 L 744,272' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,320 L 744,288' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,576 L 624,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,544 L 640,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,512 L 656,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 656,480 L 672,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,336 L 744,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,352 L 744,320' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 728,368 L 744,336' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 656,576 L 672,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,544 L 688,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 688,512 L 704,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 704,480 L 720,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 12,680 L 20,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 12,648 L 20,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,696 L 52,712' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,664 L 52,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 44,632 L 52,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,680 L 84,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,648 L 84,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 16,512 L 32,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,696 L 116,712' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 76,616 L 84,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,664 L 116,680' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 16,448 L 32,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,632 L 116,648' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 72,544 L 88,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,680 L 148,696' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,648 L 148,664' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 72,480 L 88,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 140,616 L 148,632' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 72,416 L 88,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,512 L 144,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,448 L 144,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 184,544 L 200,576' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 100,344 L 108,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 108,344 L 116,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 112,336 L 128,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 184,480 L 200,512' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 184,416 L 200,448' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,512 L 256,544' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,448 L 256,480' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,640 L 400,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,672 L 416,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,608 L 416,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,640 L 432,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,672 L 448,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 300,344 L 308,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,608 L 448,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,640 L 464,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,672 L 480,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 308,344 L 316,360' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 312,336 L 328,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,608 L 480,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,640 L 496,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,672 L 512,704' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,608 L 512,640' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,640 L 528,672' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,16 L 80,24' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,72 L 80,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 112,16 L 112,24' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 112,72 L 112,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,16 L 640,24' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,40 L 640,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,48 L 672,56' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,72 L 672,80' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,272 L 80,280' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='96.000000,272.000000 84.000000,266.399994 84.000000,277.600006' fill='currentColor' transform='rotate(90.000000, 80.000000, 272.000000)'>&lt;/polygon>
&lt;polygon points='128.000000,304.000000 116.000000,298.399994 116.000000,309.600006' fill='currentColor' transform='rotate(180.000000, 120.000000, 304.000000)'>&lt;/polygon>
&lt;polygon points='240.000000,304.000000 228.000000,298.399994 228.000000,309.600006' fill='currentColor' transform='rotate(0.000000, 232.000000, 304.000000)'>&lt;/polygon>
&lt;path d='M 280,200 L 280,208' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='296.000000,208.000000 284.000000,202.399994 284.000000,213.600006' fill='currentColor' transform='rotate(270.000000, 280.000000, 208.000000)'>&lt;/polygon>
&lt;polygon points='328.000000,304.000000 316.000000,298.399994 316.000000,309.600006' fill='currentColor' transform='rotate(180.000000, 320.000000, 304.000000)'>&lt;/polygon>
&lt;path d='M 336,200 L 336,208' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='352.000000,208.000000 340.000000,202.399994 340.000000,213.600006' fill='currentColor' transform='rotate(270.000000, 336.000000, 208.000000)'>&lt;/polygon>
&lt;polygon points='384.000000,176.000000 372.000000,170.399994 372.000000,181.600006' fill='currentColor' transform='rotate(180.000000, 376.000000, 176.000000)'>&lt;/polygon>
&lt;polygon points='416.000000,304.000000 404.000000,298.399994 404.000000,309.600006' fill='currentColor' transform='rotate(0.000000, 408.000000, 304.000000)'>&lt;/polygon>
&lt;path d='M 448,272 L 448,280' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='464.000000,272.000000 452.000000,266.399994 452.000000,277.600006' fill='currentColor' transform='rotate(90.000000, 448.000000, 272.000000)'>&lt;/polygon>
&lt;polygon points='536.000000,176.000000 524.000000,170.399994 524.000000,181.600006' fill='currentColor' transform='rotate(0.000000, 528.000000, 176.000000)'>&lt;/polygon>
&lt;path d='M 584,216 L 584,224' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='600.000000,224.000000 588.000000,218.399994 588.000000,229.600006' fill='currentColor' transform='rotate(270.000000, 584.000000, 224.000000)'>&lt;/polygon>
&lt;path d='M 584,256 L 584,264' fill='none' stroke='currentColor'>&lt;/path>
&lt;polygon points='600.000000,256.000000 588.000000,250.399994 588.000000,261.600006' fill='currentColor' transform='rotate(90.000000, 584.000000, 256.000000)'>&lt;/polygon>
&lt;polygon points='640.000000,320.000000 628.000000,314.399994 628.000000,325.600006' fill='currentColor' transform='rotate(180.000000, 632.000000, 320.000000)'>&lt;/polygon>
&lt;polygon points='672.000000,320.000000 660.000000,314.399994 660.000000,325.600006' fill='currentColor' transform='rotate(0.000000, 664.000000, 320.000000)'>&lt;/polygon>
&lt;path d='M 96,0 A 16,16 0 0,0 80,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 96,0 A 16,16 0 0,1 112,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 208,0 A 16,16 0 0,0 192,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 208,0 A 16,16 0 0,1 224,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,0 A 16,16 0 0,0 304,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 320,0 A 16,16 0 0,1 336,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,0 A 16,16 0 0,0 416,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,0 A 16,16 0 0,1 448,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 544,0 A 16,16 0 0,0 528,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 544,0 A 16,16 0 0,1 560,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 656,0 A 16,16 0 0,0 640,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 656,0 A 16,16 0 0,1 672,16' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 64,32 A 16,16 0 0,0 48,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 128,32 A 16,16 0 0,1 144,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 176,32 A 16,16 0 0,0 160,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,32 A 16,16 0 0,1 256,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,32 A 16,16 0 0,0 272,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 352,32 A 16,16 0 0,1 368,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 400,32 A 16,16 0 0,0 384,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,32 A 16,16 0 0,1 480,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 512,32 A 16,16 0 0,0 496,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 576,32 A 16,16 0 0,1 592,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,32 A 16,16 0 0,0 608,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 688,32 A 16,16 0 0,1 704,48' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 48,48 A 16,16 0 0,0 64,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 144,48 A 16,16 0 0,1 128,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 160,48 A 16,16 0 0,0 176,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,48 A 16,16 0 0,1 240,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 272,48 A 16,16 0 0,0 288,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 368,48 A 16,16 0 0,1 352,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 384,48 A 16,16 0 0,0 400,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,48 A 16,16 0 0,1 464,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 496,48 A 16,16 0 0,0 512,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 592,48 A 16,16 0 0,1 576,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,48 A 16,16 0 0,0 624,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 704,48 A 16,16 0 0,1 688,64' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 80,80 A 16,16 0 0,0 96,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 112,80 A 16,16 0 0,1 96,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 192,80 A 16,16 0 0,0 208,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 224,80 A 16,16 0 0,1 208,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 304,80 A 16,16 0 0,0 320,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 336,80 A 16,16 0 0,1 320,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,80 A 16,16 0 0,0 432,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 448,80 A 16,16 0 0,1 432,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 528,80 A 16,16 0 0,0 544,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 560,80 A 16,16 0 0,1 544,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 640,80 A 16,16 0 0,0 656,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 672,80 A 16,16 0 0,1 656,96' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 312,128 A 16,16 0 0,0 296,144' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 312,128 A 16,16 0 0,1 328,144' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 552,128 A 16,16 0 0,0 536,144' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 608,128 A 16,16 0 0,1 624,144' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 288,144 A 16,16 0 0,0 272,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 256,160 A 16,16 0 0,0 240,176' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 328,144 A 16,16 0 0,0 344,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 352,160 A 16,16 0 0,1 368,176' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 536,144 A 16,16 0 0,0 552,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,144 A 16,16 0 0,1 608,160' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 240,176 A 16,16 0 0,0 256,192' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 368,176 A 16,16 0 0,1 352,192' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 536,192 A 16,16 0 0,0 552,208' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 624,192 A 16,16 0 0,1 608,208' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 432,288 A 16,16 0 0,0 416,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 464,288 A 16,16 0 0,1 480,304' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 416,352 A 16,16 0 0,0 432,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;path d='M 480,352 A 16,16 0 0,1 464,368' fill='none' stroke='currentColor'>&lt;/path>
&lt;circle cx='16' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='16' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='16' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='16' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='16' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='32' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='32' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='32' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='32' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='32' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='48' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='48' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='48' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='48' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='48' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='64' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='64' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='64' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='64' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='64' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='80' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='80' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='80' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='80' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='80' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='104' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='104' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='104' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='104' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='104' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='120' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='120' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='120' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='120' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='120' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='136' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='136' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='136' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='136' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='136' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='152' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='152' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='152' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='152' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='152' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='168' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='168' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='168' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='168' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='168' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='192' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='192' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='192' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='192' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='192' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='208' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='208' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='208' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='208' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='208' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='224' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='224' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='224' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='224' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='224' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='240' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='240' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='240' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='240' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='240' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='256' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='256' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='256' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='256' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='256' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='280' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='288' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='288' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='296' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='296' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='296' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='304' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='304' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='312' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='312' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='312' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='320' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='320' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='328' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='328' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='328' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='336' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='336' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='344' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='368' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='376' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='376' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='384' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='384' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='384' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='392' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='392' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='400' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='400' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='400' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='408' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='408' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='416' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='416' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='416' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='424' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='424' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='432' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='448' cy='352' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='456' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='464' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='464' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='472' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='472' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='472' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='480' cy='768' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='480' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='488' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='488' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='488' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='496' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='496' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='504' cy='752' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='504' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='504' cy='816' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='512' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='512' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='520' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='568' cy='752' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='568' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='568' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='584' cy='768' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='616' cy='784' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='616' cy='800' r='6' stroke='currentColor' fill='#fff'>&lt;/circle>
&lt;circle cx='680' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='688' cy='800' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='696' cy='784' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;circle cx='696' cy='816' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;text text-anchor='middle' x='32' y='676' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='48' y='324' fill='currentColor' style='font-size:1em'>W&lt;/text>
&lt;text text-anchor='middle' x='48' y='388' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='48' y='516' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='56' y='324' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='56' y='388' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='64' y='324' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='64' y='388' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='64' y='660' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='72' y='324' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='72' y='388' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='80' y='324' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='80' y='388' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='88' y='324' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='88' y='388' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='96' y='324' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='104' y='388' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='104' y='484' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='160' y='228' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='168' y='228' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='168' y='292' fill='currentColor' style='font-size:1em'>W&lt;/text>
&lt;text text-anchor='middle' x='176' y='228' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='176' y='292' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='184' y='228' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='184' y='292' fill='currentColor' style='font-size:1em'>F&lt;/text>
&lt;text text-anchor='middle' x='192' y='228' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='192' y='292' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='200' y='228' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='208' y='228' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='216' y='228' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='240' y='692' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='248' y='388' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='256' y='388' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='264' y='180' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='264' y='324' fill='currentColor' style='font-size:1em'>O&lt;/text>
&lt;text text-anchor='middle' x='264' y='388' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='272' y='324' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='272' y='388' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='272' y='660' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='280' y='388' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='288' y='324' fill='currentColor' style='font-size:1em'>X&lt;/text>
&lt;text text-anchor='middle' x='288' y='388' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='304' y='388' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>C&lt;/text>
&lt;text text-anchor='middle' x='320' y='564' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='336' y='292' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='344' y='180' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='344' y='292' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='352' y='292' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='360' y='292' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='368' y='292' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='368' y='516' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='376' y='292' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='384' y='292' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='392' y='292' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='400' y='292' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='424' y='388' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='432' y='388' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='432' y='660' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='440' y='324' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='440' y='388' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='448' y='324' fill='currentColor' style='font-size:1em'>O&lt;/text>
&lt;text text-anchor='middle' x='448' y='388' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='456' y='324' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='456' y='388' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='464' y='388' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='464' y='660' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='480' y='388' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='552' y='180' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='552' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='552' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='552' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='552' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='552' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='560' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='560' y='340' fill='currentColor' style='font-size:1em'>U&lt;/text>
&lt;text text-anchor='middle' x='560' y='388' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='560' y='532' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='568' y='180' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='568' y='340' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='568' y='388' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='568' y='692' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='568' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='568' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='576' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='576' y='292' fill='currentColor' style='font-size:1em'>#&lt;/text>
&lt;text text-anchor='middle' x='576' y='340' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='576' y='388' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='584' y='180' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='584' y='340' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='584' y='388' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='584' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='584' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='584' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='584' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='592' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='592' y='340' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='592' y='388' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='600' y='180' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='600' y='292' fill='currentColor' style='font-size:1em'>#&lt;/text>
&lt;text text-anchor='middle' x='600' y='340' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='600' y='388' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='600' y='676' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='600' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='600' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='600' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='600' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='600' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='608' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='608' y='388' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='608' y='532' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='616' y='388' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='616' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='616' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='616' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='624' y='388' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='640' y='308' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='640' y='388' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='648' y='308' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='648' y='388' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='648' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='656' y='308' fill='currentColor' style='font-size:1em'>N&lt;/text>
&lt;text text-anchor='middle' x='656' y='388' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='656' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='656' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='664' y='388' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='664' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='664' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='664' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='672' y='388' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='672' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='672' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='680' y='340' fill='currentColor' style='font-size:1em'>U&lt;/text>
&lt;text text-anchor='middle' x='680' y='388' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='680' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='680' y='820' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='688' y='340' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='688' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='696' y='292' fill='currentColor' style='font-size:1em'>#&lt;/text>
&lt;text text-anchor='middle' x='696' y='340' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='696' y='388' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='696' y='756' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='704' y='340' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='704' y='388' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='704' y='772' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='704' y='804' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='712' y='340' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='712' y='388' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='712' y='788' fill='currentColor' style='font-size:1em'>·&lt;/text>
&lt;text text-anchor='middle' x='720' y='292' fill='currentColor' style='font-size:1em'>#&lt;/text>
&lt;text text-anchor='middle' x='720' y='340' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='720' y='388' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;/g>

 &lt;/svg>
 
&lt;/div></description></item><item><title>Problem Solving Techniques</title><link>https://ntk148v.github.io/posts/problem-solving-techniques/</link><pubDate>Wed, 18 Jan 2023 15:18:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/problem-solving-techniques/</guid><description>&lt;div align="center">
 &lt;iframe src="https://giphy.com/embed/777Aby0ZetYE8" width="480" height="259" frameBorder="0" class="giphy-embed" allowFullScreen>&lt;/iframe>&lt;p>&lt;a href="https://giphy.com/gifs/cute-think-pooh-777Aby0ZetYE8">via GIPHY&lt;/a>&lt;/p>
 &lt;p>Haven't thought of anything, have you? No, neither have I. Think, think, think&lt;/p>
&lt;/div>
&lt;h2 id="the-feynman-algorithm">The Feynman Algorithm&lt;/h2>
&lt;p>The &lt;a href="http://wiki.c2.com/?FeynmanAlgorithm">Feynman algorithm&lt;/a> was facetiously suggested by &lt;a href="http://en.wikipedia.org/wiki/Murray_Gell-Mann">Murray Gell-Mann&lt;/a>, a colleague of &lt;a href="https://en.wikipedia.org/wiki/Richard_Feynman">Richard Feynman&lt;/a>, in a New York Times interview.&lt;/p>
&lt;p>It is the combination of three steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1. Write down the problem.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Think real hard.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Write down the solution.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="polyas-principles">Polya&amp;rsquo;s Principles&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">If you can&amp;#39;t solve a problem, then there is an easier problem you can
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">solve: find it.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-- George Poyla --
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>George Polya described in his 1957 book &lt;a href="https://en.wikipedia.org/wiki/How_to_Solve_It">How to Solve It&lt;/a> (HowToSolveIt) a set of heuristics for solving problems. A basic outline of his approach is pretty similar to Feynman&amp;rsquo;s Algorithm:&lt;/p></description></item><item><title>Docker and Iptables: You may do it wrong!</title><link>https://ntk148v.github.io/posts/docker-iptables/</link><pubDate>Tue, 25 Oct 2022 10:29:11 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/docker-iptables/</guid><description>&lt;h2 id="mission">Mission&lt;/h2>
&lt;p>If you&amp;rsquo;re running Docker on a host that is exposed to the Internet (network bridge), you will probably want to restrict external access.&lt;/p>
&lt;h2 id="docker-network">Docker network&lt;/h2>
&lt;p>Let&amp;rsquo;s start with a fact that Docker manipulates &lt;code>iptables&lt;/code> rules to provide network isolation, on Linux. Docker installs custom iptables chains named &lt;code>DOCKER&lt;/code>, &lt;code>DOCKER-USER&lt;/code> and &lt;code>DOCKER-ISOLATION-STAGE-*&lt;/code>, and it ensures that incoming packets are always checked by these chains first.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">iptables -L -n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Re.Docker network, I won&amp;rsquo;t describe here because it&amp;rsquo;s a lot of knowledge. You may want to check &lt;a href="https://github.com/ntk148v/til/blob/master/docker/networking/README.md">Docker network note&lt;/a>. I will only show iptables packet flow: For example, we have a host with ip 10.0.10.26, then start a container that is exposed port 8000 to internet.&lt;/p></description></item><item><title>Moving from Utterances to Giscus</title><link>https://ntk148v.github.io/posts/moving-from-utterances-to-giscus/</link><pubDate>Tue, 30 Aug 2022 11:09:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/moving-from-utterances-to-giscus/</guid><description>&lt;p>I&amp;rsquo;ve used &lt;a href="./lets-comment.md">Utterances&lt;/a> for a while. Using Github&amp;rsquo;s issue feature as a backend for comments is a very elegant solution IM O: no tracking, no ads, simple. But today, I decide to switch to a better alternative - &lt;a href="https://github.com/giscus/giscus">Giscus&lt;/a>. Giscus is heavily inspired by Utterances except one thing: instead of using Github issues it uses the fairly new Discussions features to store comments.&lt;/p>
&lt;p>So..&lt;/p>
&lt;h2 id="why-migrate">Why migrate?&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Post reactions&lt;/strong>: utterances allows you to add reactions to comments but as an author I’m also interested in the general reception of the post itself. giscus provides this feature.&lt;/li>
&lt;li>&lt;strong>Conversation view&lt;/strong>: utterances will simply render comments as a list in the order they have been created. Giscus groups replies to a comment instead. I mean comment is about discussion, right?&lt;/li>
&lt;/ul>
&lt;h2 id="prepare-your-site">Prepare your site&lt;/h2>
&lt;ul>
&lt;li>Migrate from utterances: &lt;a href="https://docs.github.com/en/discussions/managing-discussions-for-your-community/moderating-discussions#converting-an-issue-to-a-discussion">convert the existing issues into discussions&lt;/a>.&lt;/li>
&lt;li>Follow &lt;a href="https://giscus.app/">Giscus&lt;/a>, it&amp;rsquo;s quite simple.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Leave a comment :point_down:&lt;/code>&lt;/p></description></item><item><title>Bgp Ecmp Load Balancing</title><link>https://ntk148v.github.io/posts/bgp-ecmp-load-balancing/</link><pubDate>Mon, 07 Feb 2022 15:35:08 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/bgp-ecmp-load-balancing/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>We will build a Load balancer with &lt;a href="https://en.wikipedia.org/wiki/Border_Gateway_Protocol">BGP&lt;/a> and &lt;a href="https://en.wikipedia.org/wiki/Equal-cost_multi-path_routing">Equal-Cost Multipath routing (ECMP)&lt;/a> using both &lt;a href="https://bird.network.cz/">Bird&lt;/a> and &lt;a href="https://github.com/Exa-Networks/exabgp">ExaBGP&lt;/a>.&lt;/p>
&lt;p>References:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/bufadu/0c3ba661c141a2176cd048f65430ae8d">How to build a load balancer with BGP and ECMP using VyOS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vincent.bernat.ch/en/blog/2018-multi-tier-loadbalancer#first-tier-ecmp-routing">Multi-tier load balancer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.cloudflare.com/cloudflares-architecture-eliminating-single-p/">Load balancing without Load balancers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="lab-overview">Lab overview&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.eve-ng.net/">EVE-NG&lt;/a> version 2.0.3-112&lt;/li>
&lt;li>QEMU version 2.4.0&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/bgp-ecmp-load-balancing/ecmp-bgp.png">
&lt;/figure>

&lt;ul>
&lt;li>&lt;code>AS 65000&lt;/code>: internet service provider. In this post, we will build a BGP session between EdgeRouter and ISP router.&lt;/li>
&lt;li>&lt;code>ISPRouter&lt;/code> and &lt;code>EdgeRouter&lt;/code> are &lt;a href="https://docs.fortinet.com/document/fortigate/7.0.3">Fortinet Fortigate v7.0.3&lt;/a> instances. You can use other routers as well.&lt;/li>
&lt;li>&lt;code>Switch&lt;/code> is a Cisco switch.&lt;/li>
&lt;li>&lt;code>client&lt;/code>, &lt;code>lb1&lt;/code>, and &lt;code>lb2&lt;/code> are Ubuntu server 18.04 instances. &lt;code>lb1&lt;/code> and &lt;code>lb2&lt;/code> will be in the &lt;code>10.12.12.0/24&lt;/code> private LAN, we will install nginx (LB L7) on these. Both servers will announce the same public IP (10.13.13.1) to &lt;code>EdgeRouter&lt;/code> using BGP. Incoming traffic from internet to this public IP will be routed to &lt;code>lb1&lt;/code> or &lt;code>lb2&lt;/code> depending of a hash.&lt;/li>
&lt;li>You need to download and install device virtual images. Follow &lt;a href="https://www.eve-ng.net/index.php/documentation/howtos/howto-add-fortinet-images/">EVE-NG guide&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="configure">Configure&lt;/h2>
&lt;h3 id="isprouter">ISPRouter&lt;/h3>
&lt;p>Follow the &lt;a href="https://docs.fortinet.com/document/fortigate/7.0.3">Fortigate document&lt;/a> for the basic commands.&lt;/p></description></item><item><title>Getting Started Tiling Wm [Part 6] I3 Rounded Corners</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</link><pubDate>Mon, 10 Jan 2022 13:45:01 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</guid><description>&lt;p>According to &lt;a href="https://www.reddit.com/r/unixporn/comments/7h0rm0/what_would_you_want_in_a_wm/">Reddis post&lt;/a> and &lt;a href="https://github.com/Airblader/i3/issues/167">i3-gaps issue&lt;/a>, it seems like a lot of people would like this. But Airblade - i3-gaps maintainer &lt;a href="https://github.com/Airblader/i3/issues/167#issuecomment-328562433">doesn&amp;rsquo;t like it&lt;/a>. But nevermind, we still have two ways to achieve it.&lt;/p>
&lt;h2 id="rounded-i3-gaps">Rounded i3-gaps&lt;/h2>
&lt;p>&lt;a href="https://github.com/resloved">Resloved&lt;/a> have an awesome &lt;a href="https://github.com/resloved/i3">fork&lt;/a> to implement rounded corners. I fork it again to keep it up-to-date with the upstream i3-gaps. You can check it &lt;a href="https://github.com/ntk148v/i3">here&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Install i3-gaps.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install git libxcb1-dev libxcb-keysyms1-dev libpango1.0-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libxcb-util0-dev libxcb-icccm4-dev libyajl-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libstartup-notification0-dev libxcb-randr0-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libev-dev libxcb-cursor-dev libxcb-xinerama0-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> autoconf libxcb-xrm0 libxcb-xrm-dev automake i3status &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> ninja-build meson libxcb-shape0-dev build-essential -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/ntk148v/i3.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> i3/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Compile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p build &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">meson ..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ninja
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ninja install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Configure rounded corners by adding this to your config.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">border_radius 10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Result, but you can see that these corners look so jagged (check out this &lt;a href="https://github.com/Airblader/i3/issues/167#issuecomment-485263770">comment&lt;/a>).&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-1.png">
&lt;/figure>

&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-4.png">
&lt;/figure>

&lt;h2 id="picom">picom&lt;/h2>
&lt;ul>
&lt;li>You can also achieve rounded corners by using &lt;a href="https://github.com/yshui/picom">picom&lt;/a>.&lt;/li>
&lt;li>Install picom.&lt;/li>
&lt;li>Configure rounded corners by changing &lt;code>corner_radius&lt;/code> value.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Path ~/.config/picom.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">corner_radius: 10;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Result looks much smoother.&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-2.png">
&lt;/figure>

&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-6/rounded-corners-3.png">
&lt;/figure></description></item><item><title>Rename Files in Linux</title><link>https://ntk148v.github.io/posts/rename-files-in-linux/</link><pubDate>Thu, 16 Dec 2021 10:22:05 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/rename-files-in-linux/</guid><description>&lt;ul>
&lt;li>Rename a single file with &lt;code>mv&lt;/code>. Just a basic thing.&lt;/li>
&lt;li>Rename multiple files with &lt;code>mv&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Rename files with suffix .yaml to yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> f in *.yaml&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> mv -- &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">f&lt;/span>&lt;span class="p">%.yaml&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.yml&amp;#34;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Rename multiple files with &lt;code>rename&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install rename command&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Ubuntu/Debian-derived distros&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install rename
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RedHat-derived distros&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo yum install prename
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># The follow examples are performed in Ubuntu/Debian-derived distros&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;s/.yaml/.yml/&amp;#39;&lt;/span> *.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace all occurrences of &amp;#34;prev_&amp;#34; with &amp;#34;next_&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;s/prev_/next_&amp;#39;&lt;/span> *.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Delete part of a filename&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;s/next_//&amp;#39;&lt;/span> *.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Limit changes to specific parts of filenames&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Only change the files that start with &amp;#34;paramater&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;s/^param/parameter/&amp;#39;&lt;/span> *.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Search with grouping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace all occurrences of &amp;#34;string&amp;#34; and &amp;#34;strong&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;s/(str|stro)ng/strength&amp;#39;&lt;/span> *.c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Use translations with rename&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Force filenames to uppercase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rename &lt;span class="s1">&amp;#39;y/a-z/A-Z&amp;#39;&lt;/span> *.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># More?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">man rename
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Goignore</title><link>https://ntk148v.github.io/posts/goignore/</link><pubDate>Fri, 26 Nov 2021 17:26:44 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/goignore/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/ntk148v/goignore">Goignore&lt;/a> - A &lt;code>.gitignore&lt;/code> wizard which gnerates &lt;code>.gitignore&lt;/code> files from the command line for you. Inspired by &lt;a href="https://github.com/karan/joe">joe&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>No installation necessary - just use the binary.&lt;/li>
&lt;li>Works on Linux, Windows &amp;amp; MacOS.&lt;/li>
&lt;li>Interactive user interface with &lt;a href="https://github.com/charmbracelet/bubbletea">bubbletea&lt;/a>: Pagination, Filtering, Help&amp;hellip;&lt;/li>
&lt;li>Supports all Github-supported &lt;a href="https://github.com/github/gitignore.git">.gitignore files&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;ul>
&lt;li>Download the latest binary from the &lt;a href="https://github.com/ntk148v/goignore/releases">Release page&lt;/a>. It&amp;rsquo;s the easiest way to get started with &lt;code>goignore&lt;/code>.&lt;/li>
&lt;li>Make sure to add the location of the binary to your &lt;code>$PATH&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>Just run.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">chmod a+x goignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">goignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>At the first time, &lt;code>goignore&lt;/code> will download the Gitignore templates from Github. It may take a few seconds (depend on your network).&lt;/p></description></item><item><title>Getting Started with Tiling WM [Part 1] - I3</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Disclaimer&lt;/strong>&lt;/p>
&lt;p>I love customizing desktop. I make changes in my desktop everyday, make it look eye candy. My colleagues ask me how to make their desktop look like mine. But there are many steps and things to learn and follow, I know because I&amp;rsquo;ve gone throught it. Therefore I decide to write this getting-started guide to give people a shortest path to Fancy world.&lt;/p>&lt;/blockquote>
&lt;h2 id="overview-window-manager">Overview Window Manager&lt;/h2>
&lt;p>First of all, you have to know the basic concepts.&lt;/p></description></item><item><title>Getting Started with Tiling WM [Part 2] - Rofi</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</guid><description>&lt;blockquote>
&lt;p>In the &lt;a href="https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/">part1&lt;/a>, I&amp;rsquo;ve used &lt;code>rofi&lt;/code> instead of &lt;code>dmenu&lt;/code>. This part will show you how to start with &lt;code>rofi&lt;/code>.&lt;/p>&lt;/blockquote>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/davatorium/rofi">Rofi&lt;/a> is a window switcher, application launcher and dmenu replacement.&lt;/li>
&lt;li>Features:
&lt;ul>
&lt;li>Fully configurable keyboard navigation.&lt;/li>
&lt;li>Type to filer.&lt;/li>
&lt;li>Built-in modes:
&lt;ul>
&lt;li>Window switcher mode.&lt;/li>
&lt;li>Application laucher.&lt;/li>
&lt;li>Desktop file application launcher.&lt;/li>
&lt;li>SSH laucher mode.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>History-based ordering.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;ul>
&lt;li>Installing &lt;code>rofi&lt;/code> is quite easy.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install rofi -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Run it for the first time.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rofi -lines &lt;span class="m">12&lt;/span> -padding &lt;span class="m">18&lt;/span> -width &lt;span class="m">60&lt;/span> -location &lt;span class="m">0&lt;/span> -show drun -sidebar-mode -columns &lt;span class="m">3&lt;/span> -font &lt;span class="s1">&amp;#39;DejaVu Sans 8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;details>
 &lt;summary>Details&lt;/summary>
 &lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> -show mode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Open rofi in a certain mode. Available modes are window, run, drun, ssh, combi. The
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> special argument keys can be used to open a searchable list of supported key bind‐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ings &lt;span class="o">(&lt;/span>see KEY BINDINGS&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> To show the run-dialog:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rofi -show run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -lines
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Maximum number of lines to show before scrolling.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rofi -lines &lt;span class="m">25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Default: &lt;span class="m">15&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -location
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Specify where the window should be located. The numbers map to the following loca‐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tions on screen:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">8&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">7&lt;/span> &lt;span class="m">6&lt;/span> &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Default: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -padding
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Define the inner margin of the window.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Default: &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -sidebar-mode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Open in sidebar-mode. In this mode a list of all enabled modes is shown at the bot‐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tom. &lt;span class="o">(&lt;/span>See -modi option&lt;span class="o">)&lt;/span> To show sidebar, use:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rofi -show run -sidebar-mode -lines &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/details>

&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-default.png">
&lt;/figure>

&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-default-2.png">
&lt;/figure>

&lt;ul>
&lt;li>Press hot key (defined in i3 configuration file) &lt;code>&amp;lt;Window&amp;gt;+d&lt;/code> to start rofi. Use &lt;code>&amp;lt;Shift&amp;gt;+&amp;lt;left/right&amp;gt;&lt;/code> to switch between mode.&lt;/li>
&lt;li>More details you can found in &lt;a href="https://github.com/davatorium/rofi">rofi github&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="tweaking">Tweaking&lt;/h2>
&lt;ul>
&lt;li>The default setup looks quite boring. Let&amp;rsquo;s tweak a bit!&lt;/li>
&lt;li>There are currently three methods of setting configuration options:
&lt;ul>
&lt;li>&lt;em>Local configuration. Normally, depending on XDG, in ~/.config/rofi/config. This uses the Xresources format&lt;/em>.&lt;/li>
&lt;li>Xresources: A method of storing key values in the Xserver. See here for more information.&lt;/li>
&lt;li>Command line options: Arguments are passed to Rofi.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>We will use configuration file.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir -p ~/.config/rofi/themes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">touch ~/.config/rofi/themes/onedark.theme
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Copy the follow content into &lt;code>~/.config/rofi/themes/onedark.theme&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">configuration {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> show-icons: true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> font: &amp;#34;DejaVu Sans Mono 10&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modi: &amp;#34;window,run,drun&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background: #282c34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> foreground: #abb2bf;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background-color: @background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selected-normal-foreground: @foreground;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selected-normal-background: #98c379;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selected-urgent-background: #e5c07b;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selected-urgent-foreground: @foreground;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> border: 5;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lines: 12;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> padding: 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> margin: 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> spacing: 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">window {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> width: 50%;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> transparency: &amp;#34;real&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mainbox {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> children: [inputbar, listview];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">listview {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> columns: 1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">element {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> padding: 12;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> orientation: vertical;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> text-color: @foreground;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">element selected {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background-color: @selected-normal-background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> text-color: @background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">inputbar {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> background-color: @background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> children: [prompt, entry];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">prompt {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> enabled: true;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> font: &amp;#34;DejaVu Sans Mono 10&amp;#34;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> padding: 12 0 0 12;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> text-color: @selected-urgent-background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">entry {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> padding: 12;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> text-color: @selected-urgent-background;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Run it and you can see the magic!&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rofi -theme ~/.config/rofi/themes/onedark.theme -show drun
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/getting-started-tiling-wm-part-1/rofi-custom.png">
&lt;/figure>

&lt;ul>
&lt;li>Don&amp;rsquo;t forget to update hotkey in i3 configuration file.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">bindsym $mod+d exec rofi -theme ~/.config/rofi/themes/onedark.theme -show drun
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Getting Started with Tiling WM [Part 3] - Polybar</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;a href="https://polybar.github.io/">According to Polybar frontpage&lt;/a>, &lt;code>Polybar is A fast and easy to use tool for creating status bars &lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>WIP&lt;/strong>&lt;/p>&lt;/blockquote></description></item><item><title>Getting Started with Tiling WM [Part 4] - Xresources</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>WIP&lt;/strong>&lt;/p>&lt;/blockquote></description></item><item><title>Getting Started with Tiling WM [Part 5] - Compton</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>WIP&lt;/strong>&lt;/p>&lt;/blockquote></description></item><item><title>Linux tools that you never knew you needed</title><link>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</link><pubDate>Wed, 07 Apr 2021 09:45:59 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</guid><description>&lt;h2 id="bat---cat-alternative">bat - (cat alternative)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sharkdp/bat">bat&lt;/a>: A cat(1) clone with syntax highlighting and Git integration.&lt;/li>
&lt;li>Example:&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/bat.png">
&lt;/figure>

&lt;h2 id="fd---find-alternative">fd - (find alternative)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sharkdp/fd">fd&lt;/a>: a simple, fast and user-friendly alternative to &lt;code>find&lt;/code>.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://raw.githubusercontent.com/sharkdp/fd/master/doc/screencast.svg">
&lt;/figure>

&lt;h2 id="httpie---wgetcurl-alternative">httpie - (wget/curl alternative)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://httpie.io">httpie&lt;/a>: a user-friendly command-line HTTP client for the API era. It comes with JSON support, syntax highlighting, persistent sessions, wget-like downloads, plugins, and more.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hello world&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ http httpie.io/hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Custom HTTP method, HTTP headers and JSON data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ http PUT pie.dev/put X-API-Token:123 &lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>John
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Submitting forms&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ http -f POST pie.dev/post &lt;span class="nv">hello&lt;/span>&lt;span class="o">=&lt;/span>World
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Upload a file using redirect input&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ http pie.dev/post &amp;lt; files/data.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more examples, check out: https://httpie.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ripgrep---grep-alternative">ripgrep - (grep alternative)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/BurntSushi/ripgrep">ripgrep&lt;/a>: a faster &lt;code>grep&lt;/code>. ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern. By default, ripgrep will respect your .gitignore and automatically skip hidden files/directories and binary files.&lt;/li>
&lt;li>&lt;a href="https://github.com/BurntSushi/ripgrep#quick-examples-comparing-tools">Benchmark&lt;/a>.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Basic use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rg fast README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Regular expressions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rg &lt;span class="s1">&amp;#39;fast\w+&amp;#39;&lt;/span> README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Recursive search - recursively searching the directory (current directory is default)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rg &lt;span class="s1">&amp;#39;fn write\(&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more examples, checkout: https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="delta">delta&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dandavison/delta">delta&lt;/a>: Code evolves, and we all spend time studying diffs. Delta aims to make this both efficient and enjoyable: it allows you to make extensive changes to the layout and styling of diffs, as well as allowing you to stay arbitrarily close to the default git/diff output.&lt;/li>
&lt;li>Diff/git diff doesn&amp;rsquo;t show you exactly what was changed.&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/git-diff.png">
&lt;/figure>

&lt;ul>
&lt;li>Delta shows within-line highlights based on a Levenshtein edit inference algorithm.&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/delta.png">
&lt;/figure>

&lt;ul>
&lt;li>By default, delta restructures the git output slightly to make the hunk markers human-readable:&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://user-images.githubusercontent.com/52205/81059276-254cf980-8e9e-11ea-95c3-8b757a4c11b5.png">
&lt;/figure>

&lt;ul>
&lt;li>Example config:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>core&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pager: delta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>delta&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> plus-style: &lt;span class="s2">&amp;#34;syntax #98c379&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> minus-style: &lt;span class="s2">&amp;#34;syntax #e06c75&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> syntax-theme: OneHalfDark
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> navigate: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> features: line-numbers decorations
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>interactive&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> diffFilter: delta --color-only
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Completely replace &lt;code>diff&lt;/code> with &lt;code>delta&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">diff&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;delta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="z">z&lt;/h2>
&lt;ul>
&lt;li>Tired for &lt;code>cd&lt;/code>ing into the same directories over and over? Save your time with &lt;code>z&lt;/code> command!&lt;/li>
&lt;li>&lt;a href="https://github.com/rupa/z">z&lt;/a>: jump around. Z is a shell script that makes jumping around your file directory pleasantly simple. Instead of trying to remember the exact path of where you need to go, or worse, &lt;code>cd&lt;/code>ing into the next directory followed by &lt;code>ls&lt;/code>ing and then cding again over and over (we’ve all been there), Z allows you to “lazy type” where you want to go and it’ll handle the rest.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Takes me to my workspace folder from anywhere.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ z workspace
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fzf">fzf&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a>: fzf is a general-purpose command-line fuzzy finder.&lt;/li>
&lt;li>It&amp;rsquo;s an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Read the list from STDIN and write the selected item to STDOUT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ find * -type f &lt;span class="p">|&lt;/span> fzf &amp;gt; selected
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim &lt;span class="k">$(&lt;/span>fzf&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># COMMAND **&amp;lt;TAB&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Files under the current directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># - You can select multiple items with TAB key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim **&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Files under parent directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim ../**&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Files under parent directory that match `fzf`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim ../fzf**&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Files under your home directory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim ~/**&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Directories under current directory (single-selection)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> **&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Directories under ~/github that match `fzf`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ~/github/fzf**&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Can select multiple processes with &amp;lt;TAB&amp;gt; or &amp;lt;Shift-TAB&amp;gt; keys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">kill&lt;/span> -9 &amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">unset&lt;/span> **&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">export&lt;/span> **&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">unalias&lt;/span> **&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more examples, checkout: https://github.com/junegunn/fzf&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/fzf-vim.png">
&lt;/figure>

&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/fzf-cd.png">
&lt;/figure>

&lt;h2 id="thefuck">thefuck&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/nvbn/thefuck">thefuck&lt;/a>: Magnificent app which corrects your previous console command.&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://raw.githubusercontent.com/nvbn/thefuck/master/example.gif">
&lt;/figure>

&lt;ul>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ apt-get install vim
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">E: Could not open lock file /var/lib/dpkg/lock - open &lt;span class="o">(&lt;/span>13: Permission denied&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">E: Unable to lock the administration directory &lt;span class="o">(&lt;/span>/var/lib/dpkg/&lt;span class="o">)&lt;/span>, are you root?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ fuck
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install vim &lt;span class="o">[&lt;/span>enter/↑/↓/ctrl+c&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reading package lists... Done
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For more examples, check out: https://github.com/nvbn/thefuck&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="exa---ls-alternative">exa - (ls alternative)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://the.exa.website">exa&lt;/a>: A modern replacement for ls. &lt;code>exa&lt;/code> is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary.&lt;/li>
&lt;li>Examples:&lt;/li>
&lt;/ul>
&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/exa.png">
&lt;/figure>

&lt;ul>
&lt;li>Completely replace &lt;code>ls&lt;/code> with &lt;code>exa&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;exa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure class="figure">&lt;img src="https://ntk148v.github.io/photos/linux-tools-that-you-never-knew-you-needed/exa-ls.png">
&lt;/figure></description></item><item><title>Set Animated Gif as Wallpaper</title><link>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</link><pubDate>Thu, 14 Jan 2021 09:36:34 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>NOTE&lt;/strong>: Environment Ubuntu 20.04&lt;/p>&lt;/blockquote>
&lt;h2 id="dependencies">Dependencies&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ujjwal96/xwinwrap">Xwinwrap&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install xorg-dev build-essential libx11-dev x11proto-xext-dev libxrender-dev libxext-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/ujjwal96/xwinwrap.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> xwinwrap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make clean
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Gifsicle:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install gifsicle
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-helper-script">The helper script&lt;/h2>
&lt;p>A helper script to setup animated .gif in dual monitors.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># Uses xwinwrap to display given animated .gif in dual monitors.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$#&lt;/span> -ne &lt;span class="m">1&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> 1&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span> Usage: &lt;span class="nv">$0&lt;/span> image.gif
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">gif&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall -9 xwinwrap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall -9 gifview
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Get monitors resolution&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">SCR1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>xrandr &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;/primary/ &amp;amp;&amp;amp; /connected/ { print $4 }&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">SCR2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>xrandr &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;!/primary/ &amp;amp;&amp;amp; /connected/ { print $3 }&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xwinwrap -g &lt;span class="nv">$SCR1&lt;/span> -ov -ni -s -nf -- gifview -w WID &lt;span class="nv">$gif&lt;/span> -a &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">xwinwrap -g &lt;span class="nv">$SCR2&lt;/span> -ov -ni -s -nf -- gifview -w WID &lt;span class="nv">$gif&lt;/span> -a &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to run xwinwrap by yourself, here is the example:&lt;/p></description></item><item><title>Swap space note</title><link>https://ntk148v.github.io/posts/linux-swap-space-note/</link><pubDate>Wed, 20 May 2020 09:30:28 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/linux-swap-space-note/</guid><description>&lt;h2 id="what-is-swap">What is Swap?&lt;/h2>
&lt;p>Swap file systems support virtual memory, data is written to a swap file system when there is not enough RAM to store the data your system is processing.&lt;/p>
&lt;h2 id="swap-partition-size">Swap partition size&lt;/h2>
&lt;h3 id="old-rule-of-thumb">Old rule of thumb&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">swap: 2 * the-amount-of-RAM
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So if a computer had 64KB of RAM, a swap partition of 128KB would be an optimum size. This rule took into the facts that RAM sizes were typically quite small at the time. Nowadays, RAM has become a &lt;code>cheap&lt;/code> &amp;amp; &lt;code>affordable&lt;/code> commondity, so the 2x rule is outdated.&lt;/p></description></item><item><title>Ansitheus</title><link>https://ntk148v.github.io/posts/ansitheus/</link><pubDate>Tue, 05 May 2020 13:51:59 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/ansitheus/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Ansitheus: Ansible + Prometheus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="prometheus-overview">Prometheus overview&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>NOTE&lt;/strong>: Checkout the &lt;a href="https://prometheus.io/docs/introduction/overview/">Prometheus official documentation&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://github.com/prometheus">Prometheus&lt;/a> is an open-source systems monitoring &amp;amp; alerting toolkit originally built at SoundCloud.&lt;/p>
&lt;h3 id="features">Features&lt;/h3>
&lt;ul>
&lt;li>a multi-dimensional data model with time series data identified by metric name &amp;amp; key/value pairs&lt;/li>
&lt;li>PromQL, a flexible query language to leverage this dimensionality&lt;/li>
&lt;li>no reliance on distributed storage; single server nodes are autonomous&lt;/li>
&lt;li>time series collection happens via a pull model over HTTP&lt;/li>
&lt;li>pushing time series is supported via an intermediary gateway&lt;/li>
&lt;li>targets are discovered via service discovery or static configuration&lt;/li>
&lt;li>multiple modes of graphing &amp;amp; dashboarding support&lt;/li>
&lt;/ul>
&lt;h3 id="architecture--components">Architecture &amp;amp; components&lt;/h3>
&lt;p>Prometheus scrapes metrics from instrumented jobs, either directly or via an intermediary push gateway for short-lived jobs. It stores all scraped samples locally &amp;amp; runs rules over this data to either aggregate &amp;amp; record new time series from existing data or generate alerts. Grafana or other API consumers can be used to visualize the collected data.&lt;/p></description></item><item><title>Operate Etcd cluster</title><link>https://ntk148v.github.io/posts/operate-etcd-cluster/</link><pubDate>Tue, 28 Apr 2020 11:24:04 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/operate-etcd-cluster/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>NOTE&lt;/strong>: This is my perspective aggregation. You can easily find these such of knowledges in &lt;a href="#5-references">the references&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;h2 id="context">Context&lt;/h2>
&lt;p>Etcd Version &lt;code>v3.4.0&lt;/code>.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;h3 id="number-of-nodes">Number of nodes&lt;/h3>
&lt;ul>
&lt;li>&amp;gt;= 3 nodes. A etcd cluster needs a majority of nodes, a quorum to agree on updates to the cluster state. For a cluster with &lt;strong>n-members&lt;/strong>, quorum is &lt;strong>(n/2)+1&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3 id="cpus">CPUs&lt;/h3>
&lt;ul>
&lt;li>Etcd doesn&amp;rsquo;t require a lot of CPU capacity.&lt;/li>
&lt;li>Typical clusters need &lt;strong>2-4 cores&lt;/strong> to run smoothly.&lt;/li>
&lt;/ul>
&lt;h3 id="memory">Memory&lt;/h3>
&lt;ul>
&lt;li>Etcd performance depends on having enough memory (cache key-value data, tracking watchers&amp;hellip;).&lt;/li>
&lt;li>Typical &lt;strong>8GB&lt;/strong> is enough.&lt;/li>
&lt;/ul>
&lt;h3 id="disk">Disk&lt;/h3>
&lt;ul>
&lt;li>An etcd cluster is very sensitive to disk latencies. Since etcd must persist proposals to its log, disk activity from other processes may cause long &lt;code>fsync&lt;/code> latencies. The upshot is etcd may miss heartbeats, causing request timeouts and temporary leader loss. An etcd server can sometimes stably run alongside these processes when given a high disk priority.&lt;/li>
&lt;li>Check whether a disk is fast enough for etcd using &lt;a href="https://github.com/axboe/fio">fio&lt;/a>. If the 99th percentile of fdatasync is &lt;strong>&amp;lt;10ms&lt;/strong>, your storage is ok.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ fio --rw&lt;span class="o">=&lt;/span>write --ioengine&lt;span class="o">=&lt;/span>sync --fdatasync&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> --directory&lt;span class="o">=&lt;/span>test-data &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --size&lt;span class="o">=&lt;/span>22m --bs&lt;span class="o">=&lt;/span>&lt;span class="m">2300&lt;/span> --name&lt;span class="o">=&lt;/span>mytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>SSD&lt;/strong> is recommended.&lt;/li>
&lt;/ul>
&lt;h3 id="network">Network&lt;/h3>
&lt;ul>
&lt;li>Etcd cluster should be deployed in a fast and reliable network. Low latency ensures etcd members can communicate fast. High bandwidth can reduce the time to recover a failed etcd member.&lt;/li>
&lt;li>&lt;strong>1GbE&lt;/strong> is sufficient for common etcd.&lt;/li>
&lt;li>Note that the network isn&amp;rsquo;t the only source of latency. Each request and response may be impacted by slow disks on both the leader and followers.&lt;/li>
&lt;/ul>
&lt;h2 id="tuning">Tuning&lt;/h2>
&lt;h3 id="time-parameters">Time parameters&lt;/h3>
&lt;ul>
&lt;li>&lt;code>Heartbeat interval&lt;/code>.
&lt;ul>
&lt;li>The frequency with which the leader will notify followers that it is still the leader.&lt;/li>
&lt;li>Default: &lt;strong>100ms&lt;/strong>.&lt;/li>
&lt;li>Best practice: &lt;strong>Around 0.5-1.5 x round-trip time (RTT) between members&lt;/strong>. Measure RTT with &lt;code>ping&lt;/code>.&lt;/li>
&lt;li>Tradeoff: Too low -&amp;gt; etcd will send unnecessary messages -&amp;gt; increase the usage of CPU and network resources. Too high -&amp;gt; leads to high election timeout.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Election timeout&lt;/code>.
&lt;ul>
&lt;li>How long a follower node will go without hearing a heartbeat before attempting to become leader itself.&lt;/li>
&lt;li>Default: &lt;strong>1000ms&lt;/strong>.&lt;/li>
&lt;li>Best practice: &lt;strong>&amp;gt;= 10 x RTT and &amp;lt; 50s&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The heartbeat interval and election timeout value should be &lt;strong>the same for all members in one cluster&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Command line arguments:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ etcd --heartbeat-interval&lt;span class="o">=&lt;/span>&lt;span class="m">100&lt;/span> --election-timeout&lt;span class="o">=&lt;/span>&lt;span class="m">500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Environment variables:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nv">ETCD_HEARTBEAT_INTERVAL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">100&lt;/span> &lt;span class="nv">ETCD_ELECTION_TIMEOUT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">500&lt;/span> etcd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="disk-1">Disk&lt;/h3>
&lt;ul>
&lt;li>An etcd server can sometimes stably run alongside these processes when given a high disk priority using &lt;a href="https://linux.die.net/man/1/ionice">ionice&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># best effort, highest priority&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo ionice -c2 -n0 -p &lt;span class="sb">`&lt;/span>pgrep etcd&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="snapshot">Snapshot&lt;/h3>
&lt;ul>
&lt;li>etcd appends all key changes to a log file -&amp;gt; huge log that grows forever :point_up:&lt;/li>
&lt;li>Solution: Make periodic snapshots (save the current and remove old logs).&lt;/li>
&lt;li>Default: make snapshots after every &lt;strong>10 000 changes&lt;/strong>.&lt;/li>
&lt;li>Tuning: Just in case that etcd&amp;rsquo;s memory and disk usage is too high, lower threshold.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Command line arguments:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ etcd --snapshot-count&lt;span class="o">=&lt;/span>&lt;span class="m">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Environment variables:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nv">ETCD_SNAPSHOT_COUNT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">5000&lt;/span> etcd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="maintenance">Maintenance&lt;/h2>
&lt;h3 id="history-compaction">History compaction&lt;/h3>
&lt;ul>
&lt;li>Etcd keeps an exact history of its keyspace, the history should be periodically compacted to avoid performance degradation and eventual storage space exhaustion.&lt;/li>
&lt;li>Etcd can be set to automatically compact the keyspace with the &lt;code>--auto-compaction-*&lt;/code> option with a period of hours.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># keep one hour of history&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ etcd --auto-compaction-retention&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> --auto-compaction-mode&lt;span class="o">=&lt;/span>periodic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Compaction modes:
&lt;ul>
&lt;li>Revision-based: &lt;code>--auto-compaction-mode=revision --auto-compaction-retention=1000&lt;/code> automatically Compact on &amp;ldquo;latest revision&amp;rdquo; - 1000 every 5-minute (when latest revision is 30000, compact on revision 29000). Use this when having a large keyspace.&lt;/li>
&lt;li>Periodic: &lt;code>--auto-compaction-mode=periodic --auto-compaction-retention=72h&lt;/code> automatically Compact with 72-hour retention window every 1-hour. Use this when having a huge number of revisions for a key-value pair.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="defragmentation">Defragmentation&lt;/h3>
&lt;ul>
&lt;li>Compacting old revisions internally fragments etcd by leaving gaps in backend database - &lt;code>internal fragmentation&lt;/code>.&lt;/li>
&lt;li>Internal fragmentation space is available for use by etcd but unavailable to the host filesystem.&lt;/li>
&lt;li>Solution: Release this space back to the filesystem with defrag.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ etcdctl defrag
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>It should be run rather infrequently, as there is always going to be an unavoidable pause.&lt;/li>
&lt;/ul>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>Etcd hardware: &lt;a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/hardware.md">https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/hardware.md&lt;/a>&lt;/li>
&lt;li>Etcd tuning: &lt;a href="https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md">https://github.com/etcd-io/etcd/blob/master/Documentation/tuning.md&lt;/a>&lt;/li>
&lt;li>Etcd maintainence: &lt;a href="https://etcd.io/docs/v3.4.0/op-guide/maintenance/">https://etcd.io/docs/v3.4.0/op-guide/maintenance/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Golang: Block forever</title><link>https://ntk148v.github.io/posts/golang-block-forever/</link><pubDate>Mon, 27 Apr 2020 15:59:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-block-forever/</guid><description>&lt;p>Sometimes, you want to block the current goroutine when allowing others to continue. Here is some tricks I&amp;rsquo;ve collected:&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;p>Firstly give them some credits:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/">https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pliutau.com/different-ways-to-block-go-runtime-forever/">https://pliutau.com/different-ways-to-block-go-runtime-forever/&lt;/a>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>NOTE: I run these with Golang 1.12&lt;/p>&lt;/blockquote>
&lt;h2 id="the-original">The original&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">show&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">9696969&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="nf">show&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// The main goroutine is exited before the show() be done.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;OK we&amp;#39;re done&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="bad---an-empty-infinite-loop">Bad - An empty infinite loop&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">forever&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Empty, just do nothing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">show&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">9696969&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="nf">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">forever&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;OK we&amp;#39;re done&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An infinite loop here is a busy loop that does nothing except burn CPU time.&lt;/p></description></item><item><title>Rest In Peace Kobe Bryant</title><link>https://ntk148v.github.io/posts/rip-kobe-bryant/</link><pubDate>Mon, 27 Jan 2020 22:15:07 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/rip-kobe-bryant/</guid><description>&lt;p>&lt;img src="./theundefeated-kobe-bryant.pg" alt="">&lt;/p>
&lt;p>Source: &lt;a href="https://theundefeated.com/features/kobe-vs-kobe-bryant-lakers-numbers-8-and-24-jersey-retirement/">The Undefeated&lt;/a>&lt;/p>
&lt;p>I am not Kobe fan honestly but just like him, basketball is something I love. I hope he&amp;rsquo;s at peace because although his journey in life is over, the legacy he left behind is etched in all our souls.&lt;/p>
&lt;p>Rest In Peace Mamba :basketball:&lt;/p>
&lt;p>&lt;img src="./kobe.jpg" alt="">&lt;/p></description></item><item><title>Openstack Autoscaling New Approach</title><link>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</link><pubDate>Mon, 19 Aug 2019 21:19:38 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</guid><description>&lt;blockquote>
&lt;p>NOTE(kiennt): There is a &lt;a href="https://github.com/vCloud-DFTBA/faythe/blob/legacy/docs/autoscaling.md">legacy Faythe guideline&lt;/a>. The new version is coming soon, check &lt;a href="https://github.com/vCloud-DFTBA/faythe">its repository&lt;/a> for status.&lt;/p>&lt;/blockquote>
&lt;p>This guide describes how to automatically scale out your Compute instances in response to heavy system usage. By combining with Prometheus pre-defined rules that consider factors such as CPU or memory usage, you can configure OpenStack Orchestration (Heat) to add and remove additional instances automatically, when they are needed.&lt;/p>
&lt;h2 id="the-standard-openstack-autoscaling-approach">The standard OpenStack Autoscaling approach&lt;/h2>
&lt;p>Let&amp;rsquo;s talk about the standard OpenStack Autoscaling approach before goes to the new approach.&lt;/p></description></item><item><title>Lets Comment</title><link>https://ntk148v.github.io/posts/lets-comment/</link><pubDate>Tue, 02 Oct 2018 09:47:11 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/lets-comment/</guid><description>&lt;p>Hugo ships with support for Disqus, a third-party service that provides comment and community capabilities to websites via JavaScript. But Disqus generates a shit load of page requests and heavy contents&amp;hellip; which even with the benefits that come with having Disqus in place. People just want something that can be used to post a comment, that is.&lt;/p>
&lt;p>That&amp;rsquo;s why I choose a Disqus alternative - &lt;a href="https://utteranc.es/">Utterances&lt;/a>. Utterances is a lightweight comments widget built on Github issues. Use Github issues for blog comments, wiki pages and more!&lt;/p></description></item></channel></rss>