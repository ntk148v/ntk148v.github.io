<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on kiennt26's home</title><link>https://ntk148v.github.io/tags/golang/</link><description>Recent content in Golang on kiennt26's home</description><generator>Hugo</generator><language>en-us</language><managingEditor>kiennt2609@gmail.com (Kien Nguyen-Tuan)</managingEditor><webMaster>kiennt2609@gmail.com (Kien Nguyen-Tuan)</webMaster><lastBuildDate>Wed, 30 Aug 2023 09:43:02 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang Async</title><link>https://ntk148v.github.io/posts/golang-async/</link><pubDate>Fri, 21 Jul 2023 16:16:31 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-async/</guid><description>This article is Golang version of Asynchronous programming with async and await guideline. They did really good job to demonstrate how asynchronous programming looks like.
You can find source code here.
Throughout this article, we&amp;rsquo;ll write the instructions to make a breakfast.
1. Pour a cup of coffee. 2. Heat a pan, then fry two eggs. 3. Fry three slices of bacon. 4. Toast two pieces of bread. 5. Add butter and jam to the toast.</description></item><item><title>Goignore</title><link>https://ntk148v.github.io/posts/goignore/</link><pubDate>Fri, 26 Nov 2021 17:26:44 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/goignore/</guid><description>Goignore - A .gitignore wizard which gnerates .gitignore files from the command line for you. Inspired by joe Features No installation necessary - just use the binary. Works on Linux, Windows &amp;amp; MacOS. Interactive user interface with bubbletea: Pagination, Filtering, Help&amp;hellip; Supports all Github-supported .gitignore files. Install Download the latest binary from the Release page. It&amp;rsquo;s the easiest way to get started with goignore. Make sure to add the location of the binary to your $PATH.</description></item><item><title>Golang: Block forever</title><link>https://ntk148v.github.io/posts/golang-block-forever/</link><pubDate>Mon, 27 Apr 2020 15:59:21 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/golang-block-forever/</guid><description>Sometimes, you want to block the current goroutine when allowing others to continue. Here is some tricks I&amp;rsquo;ve collected:
References Firstly give them some credits:
https://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/ https://pliutau.com/different-ways-to-block-go-runtime-forever/ NOTE: I run these with Golang 1.12
The original package main import &amp;#34;fmt&amp;#34; func show() { for i := 1; i &amp;lt; 9696969; i++ { time.Sleep(1000) fmt.Println(i) } } func main() { go show() // The main goroutine is exited before the show() be done.</description></item></channel></rss>