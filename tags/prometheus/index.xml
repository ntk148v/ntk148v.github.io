<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prometheus on kiennt26's home</title><link>https://ntk148v.github.io/tags/prometheus/</link><description>Recent content in Prometheus on kiennt26's home</description><generator>Hugo</generator><language>en-us</language><managingEditor>kiennt2609@gmail.com (Kien Nguyen-Tuan)</managingEditor><webMaster>kiennt2609@gmail.com (Kien Nguyen-Tuan)</webMaster><lastBuildDate>Wed, 25 Dec 2024 10:38:20 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/tags/prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>Ansitheus</title><link>https://ntk148v.github.io/posts/ansitheus/</link><pubDate>Tue, 05 May 2020 13:51:59 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/ansitheus/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Ansitheus: Ansible + Prometheus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="prometheus-overview">Prometheus overview&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>NOTE&lt;/strong>: Checkout the &lt;a href="https://prometheus.io/docs/introduction/overview/">Prometheus official documentation&lt;/a>.&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://github.com/prometheus">Prometheus&lt;/a> is an open-source systems monitoring &amp;amp; alerting toolkit originally built at SoundCloud.&lt;/p>
&lt;h3 id="features">Features&lt;/h3>
&lt;ul>
&lt;li>a multi-dimensional data model with time series data identified by metric name &amp;amp; key/value pairs&lt;/li>
&lt;li>PromQL, a flexible query language to leverage this dimensionality&lt;/li>
&lt;li>no reliance on distributed storage; single server nodes are autonomous&lt;/li>
&lt;li>time series collection happens via a pull model over HTTP&lt;/li>
&lt;li>pushing time series is supported via an intermediary gateway&lt;/li>
&lt;li>targets are discovered via service discovery or static configuration&lt;/li>
&lt;li>multiple modes of graphing &amp;amp; dashboarding support&lt;/li>
&lt;/ul>
&lt;h3 id="architecture--components">Architecture &amp;amp; components&lt;/h3>
&lt;p>Prometheus scrapes metrics from instrumented jobs, either directly or via an intermediary push gateway for short-lived jobs. It stores all scraped samples locally &amp;amp; runs rules over this data to either aggregate &amp;amp; record new time series from existing data or generate alerts. Grafana or other API consumers can be used to visualize the collected data.&lt;/p></description></item><item><title>Openstack Autoscaling New Approach</title><link>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</link><pubDate>Mon, 19 Aug 2019 21:19:38 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/openstack-autoscaling-new-approach/</guid><description>&lt;blockquote>
&lt;p>NOTE(kiennt): There is a &lt;a href="https://github.com/vCloud-DFTBA/faythe/blob/legacy/docs/autoscaling.md">legacy Faythe guideline&lt;/a>. The new version is coming soon, check &lt;a href="https://github.com/vCloud-DFTBA/faythe">its repository&lt;/a> for status.&lt;/p>&lt;/blockquote>
&lt;p>This guide describes how to automatically scale out your Compute instances in response to heavy system usage. By combining with Prometheus pre-defined rules that consider factors such as CPU or memory usage, you can configure OpenStack Orchestration (Heat) to add and remove additional instances automatically, when they are needed.&lt;/p>
&lt;h2 id="the-standard-openstack-autoscaling-approach">The standard OpenStack Autoscaling approach&lt;/h2>
&lt;p>Let&amp;rsquo;s talk about the standard OpenStack Autoscaling approach before goes to the new approach.&lt;/p></description></item></channel></rss>