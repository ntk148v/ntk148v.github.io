<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on kiennt26's home</title><link>https://ntk148v.github.io/tags/linux/</link><description>Recent content in linux on kiennt26's home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Mar 2023 14:28:09 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Run in the Background</title><link>https://ntk148v.github.io/posts/linux-run-in-the-background/</link><pubDate>Fri, 03 Mar 2023 14:28:09 +0700</pubDate><guid>https://ntk148v.github.io/posts/linux-run-in-the-background/</guid><description>Environment: Ubuntu 22.04, but it should work in other Linux distributions.
Source: https://www.sobyte.net/post/2023-03/linux-services-in-the-background/
You run some commands, it may take a long time to execute, and you don&amp;rsquo;t want to wait for it. So what should you do in that scenario?
graph TD A(You don't want to wait for a running command) --> B{Do you want to see output?} A --> C{Do you want the command to stay running after the session ends?</description></item><item><title>Linux Network Performance Ultimate Guide</title><link>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</link><pubDate>Fri, 24 Feb 2023 17:22:02 +0700</pubDate><guid>https://ntk148v.github.io/posts/linux-network-performance-ultimate-guide/</guid><description>The following content is rendered from my #til github. Linux Network Performance Source:
https://github.com/leandromoreira/linux-network-performance-parameters/ https://access.redhat.com/sites/default/files/attachments/20150325_network_performance_tuning.pdf https://www.coverfire.com/articles/queueing-in-the-linux-network-stack/ https://blog.cloudflare.com/how-to-achieve-low-latency/ https://blog.cloudflare.com/how-to-receive-a-million-packets/ https://beej.us/guide/bgnet/html/ https://blog.csdn.net/armlinuxww/article/details/111930788 https://www.ibm.com/docs/en/linux-on-systems?topic=recommendations-network-performance-tuning Table of Contents:
Linux Network Performance 1. Linux Networking stack 1.1. Linux network packet reception 1.2. Linux kernel network transmission 2. Network Performance tuning 2.0. Quick HOWTO 2.0.1. /proc/net/softnet_stat &amp;amp; /proc/net/sockstat 2.0.2. ss 2.0.3. netstat 2.0.4. sysctl 2.1. The NIC Ring Buffer 2.2. Interrupt Coalescence (IC) - rx-usecs, tx-usecs, rx-frames, tx-frames (hardware IRQ) 2.</description></item><item><title>Iptables</title><link>https://ntk148v.github.io/posts/iptables/</link><pubDate>Fri, 24 Feb 2023 17:19:31 +0700</pubDate><guid>https://ntk148v.github.io/posts/iptables/</guid><description>Iptables Source:
https://www.thegeekstuff.com/2011/01/iptables-fundamentals/
https://www.opsist.com/blog/2015/08/11/how-do-i-see-what-iptables-is-doing.html
https://www.digitalocean.com/community/tutorials/a-deep-dive-into-iptables-and-netfilter-architecture
https://www.sobyte.net/post/2022-04/understanding-netfilter-and-iptables/ - advanced
Iptables
1. Introduction 2. Netfilter hooks 3. iptables tables and chains 4. iptables rules 5. iptables drawbacks 6. iptables TRACE 1. Introduction iptables is used to manage packet filtering and NAT rules. iptables works with the kernel netfilter packet filtering framework. iptables is replaced with nftables, but iptables syntax is still commonly used as a baseline. iptables on a high-level. iptables tables chains rules 2.</description></item><item><title>Getting Started Tiling Wm [Part 6] I3 Rounded Corners</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</link><pubDate>Mon, 10 Jan 2022 13:45:01 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-6-i3-rounded-corners/</guid><description>According to Reddis post and i3-gaps issue, it seems like a lot of people would like this. But Airblade - i3-gaps maintainer doesn&amp;rsquo;t like it. But nevermind, we still have two ways to achieve it.
Rounded i3-gaps Resloved have an awesome fork to implement rounded corners. I fork it again to keep it up-to-date with the upstream i3-gaps. You can check it here.
Install i3-gaps. # Dependencies sudo apt install git libxcb1-dev libxcb-keysyms1-dev libpango1.</description></item><item><title>Rename Files in Linux</title><link>https://ntk148v.github.io/posts/rename-files-in-linux/</link><pubDate>Thu, 16 Dec 2021 10:22:05 +0700</pubDate><guid>https://ntk148v.github.io/posts/rename-files-in-linux/</guid><description>Rename a single file with mv. Just a basic thing. Rename multiple files with mv. # Rename files with suffix .yaml to yml for f in *.yaml; do mv -- &amp;#34;$f&amp;#34; &amp;#34;${f%.yaml}.yml&amp;#34; done Rename multiple files with rename. # Install rename command # Ubuntu/Debian-derived distros sudo apt install rename # RedHat-derived distros sudo yum install prename # The follow examples are performed in Ubuntu/Debian-derived distros rename &amp;#39;s/.yaml/.yml/&amp;#39; *.yaml # Replace all occurrences of &amp;#34;prev_&amp;#34; with &amp;#34;next_&amp;#34; rename &amp;#39;s/prev_/next_&amp;#39; *.</description></item><item><title>Getting Started with Tiling WM [Part 1] - I3</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-1-i3/</guid><description>Disclaimer
I love customizing desktop. I make changes in my desktop everyday, make it look eye candy. My colleagues ask me how to make their desktop look like mine. But there are many steps and things to learn and follow, I know because I&amp;rsquo;ve gone throught it. Therefore I decide to write this getting-started guide to give people a shortest path to Fancy world.
Overview Window Manager First of all, you have to know the basic concepts.</description></item><item><title>Getting Started with Tiling WM [Part 2] - Rofi</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-2-rofi/</guid><description>In the part1, I&amp;rsquo;ve used rofi instead of dmenu. This part will show you how to start with rofi. Introduction Rofi is a window switcher, application launcher and dmenu replacement. Features: Fully configurable keyboard navigation. Type to filer. Built-in modes: Window switcher mode. Application laucher. Desktop file application launcher. SSH laucher mode. History-based ordering. &amp;hellip; Getting started Installing rofi is quite easy. sudo apt install rofi -y Run it for the first time.</description></item><item><title>Getting Started with Tiling WM [Part 3] - Polybar</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-3-polybar/</guid><description>Overview According to Polybar frontpage, Polybar is A fast and easy to use tool for creating status bars .
WIP</description></item><item><title>Getting Started with Tiling WM [Part 4] - Xresources</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-4-xresources/</guid><description> WIP</description></item><item><title>Getting Started with Tiling WM [Part 5] - Compton</title><link>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</link><pubDate>Mon, 19 Apr 2021 10:10:21 +0700</pubDate><guid>https://ntk148v.github.io/posts/getting-started-tiling-wm-part-5-compton/</guid><description> WIP</description></item><item><title>Linux tools that you never knew you needed</title><link>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</link><pubDate>Wed, 07 Apr 2021 09:45:59 +0700</pubDate><guid>https://ntk148v.github.io/posts/linux-tools-that-you-never-knew-you-needed/</guid><description>bat - (cat alternative) bat: A cat(1) clone with syntax highlighting and Git integration. Example: fd - (find alternative) fd: a simple, fast and user-friendly alternative to find. Examples: httpie - (wget/curl alternative) httpie: a user-friendly command-line HTTP client for the API era. It comes with JSON support, syntax highlighting, persistent sessions, wget-like downloads, plugins, and more. Examples: # Hello world $ http httpie.io/hello # Custom HTTP method, HTTP headers and JSON data $ http PUT pie.</description></item><item><title>Set Animated Gif as Wallpaper</title><link>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</link><pubDate>Thu, 14 Jan 2021 09:36:34 +0700</pubDate><guid>https://ntk148v.github.io/posts/set-animated-gif-as-wallpaper/</guid><description>NOTE: Environment Ubuntu 20.04
Dependencies Xwinwrap: sudo apt-get install xorg-dev build-essential libx11-dev x11proto-xext-dev libxrender-dev libxext-dev git clone https://github.com/ujjwal96/xwinwrap.git cd xwinwrap make sudo make install make clean Gifsicle: sudo apt install gifsicle The helper script A helper script to setup animated .gif in dual monitors.
#!/bin/bash # Uses xwinwrap to display given animated .gif in dual monitors. if [ $# -ne 1 ]; then echo 1&amp;gt;&amp;amp;2 Usage: $0 image.gif exit 1 fi gif=$1 killall -9 xwinwrap killall -9 gifview # Get monitors resolution SCR1=`xrandr | awk &amp;#39;/primary/ &amp;amp;&amp;amp; /connected/ { print $4 }&amp;#39;` SCR2=`xrandr | awk &amp;#39;!</description></item><item><title>Swap space note</title><link>https://ntk148v.github.io/posts/linux-swap-space-note/</link><pubDate>Wed, 20 May 2020 09:30:28 +0700</pubDate><guid>https://ntk148v.github.io/posts/linux-swap-space-note/</guid><description>What is Swap? Swap file systems support virtual memory, data is written to a swap file system when there is not enough RAM to store the data your system is processing.
Swap partition size Old rule of thumb swap: 2 * the-amount-of-RAM So if a computer had 64KB of RAM, a swap partition of 128KB would be an optimum size. This rule took into the facts that RAM sizes were typically quite small at the time.</description></item></channel></rss>