<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on kiennt26's home</title><link>https://ntk148v.github.io/tags/docker/</link><description>Recent content in Docker on kiennt26's home</description><generator>Hugo</generator><language>en-us</language><managingEditor>kiennt2609@gmail.com (Kien Nguyen-Tuan)</managingEditor><webMaster>kiennt2609@gmail.com (Kien Nguyen-Tuan)</webMaster><lastBuildDate>Mon, 16 Jun 2025 11:00:28 +0700</lastBuildDate><atom:link href="https://ntk148v.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>A clumsy Docker network notes</title><link>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</link><pubDate>Tue, 12 Dec 2023 14:47:26 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/clumsy-docker-network-notes/</guid><description>&lt;h1 id="a-clumsy-docker-networking-notes"&gt;A clumsy Docker networking notes&lt;/h1&gt;
&lt;p&gt;Nguồn:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ntk148v/til/tree/master/docker/networking"&gt;https://github.com/ntk148v/til/tree/master/docker/networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://argus-sec.com/docker-networking-behind-the-scenes/"&gt;https://argus-sec.com/docker-networking-behind-the-scenes/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/network/"&gt;https://docs.docker.com/network/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md"&gt;https://github.com/KamranAzeem/learn-docker/blob/master/docs/docker-networking-deep-dive.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/engine/tutorials/networkingcontainers/"&gt;https://docs.docker.com/engine/tutorials/networkingcontainers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/network/iptables/"&gt;https://docs.docker.com/network/iptables/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj"&gt;https://dev.to/polarbit/how-docker-container-networking-works-mimic-it-using-linux-network-namespaces-9mj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="khái-niệm"&gt;Khái niệm&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Các khái niệm:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://man7.org/linux/man-pages/man8/ip-netns.8.html"&gt;Network namespace&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trước khi đi vào network namespace, cần hiểu về &lt;strong&gt;Namespace&lt;/strong&gt;. Namespace là một tính năng của Linux kernel để phân vùng tài nguyên của kernel sao cho một tập hợp các process chỉ nhìn thấy tập hợp các tài nguyên (trong namespace đó) trong khi một tập hợp các process khác nhìn thấy tập các tài nguyên khác (trong namespace khác). Tính năng này hoạt động bằng cách đưa tập các tài nguyên và process vào cùng một namespace, các namespace khác nhau sẽ tham chiếu đến các tài nguyên riêng biệt. Tài nguyên có thể tồn tại trong nhiều không gian. Ví dụ về các tài nguyên như vậy là process ID, hostname, user ID, tên file và một số tên (name) liên quan đến quyền truy cập mạng và giao tiếp giữa các process.&lt;/li&gt;
&lt;li&gt;Networking namespace là một trong các loại namespace. Mỗi network namespace có &lt;a href="https://en.wikipedia.org/wiki/Network_stack"&gt;network stack&lt;/a&gt; riêng: địa chỉ IP, network interface, route table, &amp;hellip;&lt;/li&gt;
&lt;li&gt;Bạn có thể xem thao tác các network namespace bằng câu lệnh sau:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;$ sudo ip netns &amp;lt;sub-command&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/index.php/Network_bridge"&gt;Network bridge&lt;/a&gt;: một thiết bị mạng ảo chuyển tiếp các gói giữa hai hoặc nhiều phân đoạn mạng.&lt;/p&gt;</description></item><item><title>Docker and Iptables: You may do it wrong!</title><link>https://ntk148v.github.io/posts/docker-iptables/</link><pubDate>Tue, 25 Oct 2022 10:29:11 +0700</pubDate><author>kiennt2609@gmail.com (Kien Nguyen-Tuan)</author><guid>https://ntk148v.github.io/posts/docker-iptables/</guid><description>&lt;h2 id="mission"&gt;Mission&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re running Docker on a host that is exposed to the Internet (network bridge), you will probably want to restrict external access.&lt;/p&gt;
&lt;h2 id="docker-network"&gt;Docker network&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with a fact that Docker manipulates &lt;code&gt;iptables&lt;/code&gt; rules to provide network isolation, on Linux. Docker installs custom iptables chains named &lt;code&gt;DOCKER&lt;/code&gt;, &lt;code&gt;DOCKER-USER&lt;/code&gt; and &lt;code&gt;DOCKER-ISOLATION-STAGE-*&lt;/code&gt;, and it ensures that incoming packets are always checked by these chains first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;iptables -L -n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Re.Docker network, I won&amp;rsquo;t describe here because it&amp;rsquo;s a lot of knowledge. You may want to check &lt;a href="https://github.com/ntk148v/til/blob/master/docker/networking/README.md"&gt;Docker network note&lt;/a&gt;. I will only show iptables packet flow: For example, we have a host with ip 10.0.10.26, then start a container that is exposed port 8000 to internet.&lt;/p&gt;</description></item></channel></rss>